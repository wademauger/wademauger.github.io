{"version":3,"file":"WizardView-0Rt2z_c-.js","sources":["../../../src/data/garments.ts","../../../src/apps/knitting-designer/utils/panelDimensions.ts","../../../src/apps/knitting-designer/components/WizardView.tsx"],"sourcesContent":["import VisualMotif from '../models/VisualMotif';\n\n// Helper function to generate systematic garment sizes\n// Based on 10% scaling per size, with Men's Medium = Women's Large as base (1.0)\nconst generateGarmentSizes = () => {\n  const sizeOrder = ['XXS', 'XS', 'S', 'M', 'L', 'XL', 'XXL'];\n  const getSizeIndex = (size) => sizeOrder.indexOf(size) - 3; // M = index 0\n  const calculateSizeMultiplier = (sizeIndex) => Math.pow(1.1, sizeIndex);\n\n  const sizes = {};\n  \n  // Generate all combinations based on Men's M = Women's L equivalency\n  sizeOrder.forEach((mensSize: any) => {\n    sizeOrder.forEach((womensSize: any) => {\n      const mensSizeIndex = getSizeIndex(mensSize);\n      const womensSizeIndex = getSizeIndex(womensSize) - 1; // Offset by 1 for equivalency\n      \n      // Only include sizes where the calculations match\n      if (mensSizeIndex === womensSizeIndex) {\n        const multiplier = calculateSizeMultiplier(mensSizeIndex);\n        const sizeName = `men's ${mensSize.toLowerCase()} / women's ${womensSize.toLowerCase()}`;\n        sizes[sizeName] = Math.round(multiplier * 1000) / 1000; // Round to 3 decimal places\n      }\n    });\n  });\n  \n  return sizes;\n};\n\nconst standardGarmentSizes = generateGarmentSizes();\n\nconst garments = [\n    {\n        'permalink': 'cozy-raglan-sweater',\n        'title': 'Cozy Raglan V-Neck Sweater',\n        'description': 'A simple sweater with Raglan sleeves',\n        'sizes': standardGarmentSizes,\n        'shapes': {\n            'Front':\n            {\n                'height': 4,\n                'baseA': 25,\n                'baseB': 25,\n                'finishingSteps': ['Hang hem.'],\n                'successors': [{\n                    'height': 20,\n                    'baseA': 25,\n                    'baseB': 25,\n                    'successors': [\n                        { 'height': 0, 'baseA': 1, 'baseB': 1 },\n                        { 'height': 8, 'baseA': 10, 'baseB': 3 },\n                        { 'height': 0, 'baseA': 2, 'baseB': 2 },\n                        { 'height': 8, 'baseA': 10, 'baseB': 3 },\n                        { 'height': 0, 'baseA': 1, 'baseB': 1 }\n                    ]\n                }]\n            },\n            'Back': {\n                'height': 4,\n                'baseA': 25,\n                'baseB': 25,\n                'finishingSteps': ['Hang hem.'],\n                'successors': [{\n                    'height': 20,\n                    'baseA': 25,\n                    'baseB': 25,\n                    'successors': [\n                        { 'height': 0, 'baseA': 1, 'baseB': 1 },\n                        { 'height': 8, 'baseA': 23, 'baseB': 15 },\n                        { 'height': 0, 'baseA': 1, 'baseB': 1 }\n                    ]\n                }]\n            },\n            'Sleeves (make 2)': {\n                'height': 4,\n                'baseA': 10,\n                'baseB': 10,\n                'successors': [\n                    {\n                        'height': 14, 'baseA': 10, 'baseB': 20, 'successors': [\n                            { 'height': 7, 'baseA': 20, 'baseB': 3 }\n                        ]\n                    }\n                ]\n            }\n        },\n        'finishingSteps': [\n            'Lay out the panels and sleeves, right sides together, and knit the collar in whatever style you prefer.',\n            'Sew up the side seams and sleeve seams.',\n            'Weave in all ends.'\n        ]\n    }, {\n        'permalink': 'seam-top-hat',\n        'title': 'Seam-Top Hat',\n        'description': 'A simple hat with an elegant construction',\n        'sizes': {\n            'One Size': 1\n        },\n        'shapes': {\n            'Hat': {\n                'height': 4,\n                'baseA': 22,\n                'baseB': 22,\n                'finishingSteps': ['Hang hem.'],\n                'successors': [\n                    {\n                        'height': 10,\n                        'baseA': 22,\n                        'baseB': 22,\n                        'successors': [\n                            { 'height': 4, 'baseA': 5.5, 'baseB': 0.2 },\n                            { 'height': 4, 'baseA': 5.5, 'baseB': 0.2 },\n                            { 'height': 4, 'baseA': 5.5, 'baseB': 0.2 },\n                            { 'height': 4, 'baseA': 5.5, 'baseB': 0.2 }\n                        ]\n                    }\n                ]\n            }\n        },\n        'finishingSteps': ['Either use sew-as-you-go to join the top panels on the machine, or sew with a tapestry needle after binding off.', 'Sew up the back seam.', 'Add braided ear strings if desired.']\n    }, {\n        'permalink': 'drop-shoulder-crew-neck-sweater',\n        'title': 'Drop-Shoulder Crew Neck Sweater',\n        'description': 'A cozy drop-shoulder sweater with a classic crew neck',\n        'sizes': standardGarmentSizes,\n        'shapes': { // TODO: Shape the neckline/shoulders for this sweater\n            'Front': {\n                'height': 5,\n                'baseA': 5,\n                'baseB': 5,\n                'successors': [{\n                    'height': 5,\n                    'baseA': 5,\n                    'baseB': 5,\n                    'successors': [{\n                        'height': 5,\n                        'baseA': 5,\n                        'baseB': 5\n                    }]\n                }]\n            },\n            'Back': {\n                'height': 5,\n                'baseA': 30,\n                'baseB': 30,\n                'finishingSteps': ['Hang hem.'],\n                'successors': [{\n                    'height': 20,\n                    'baseA': 30,\n                    'baseB': 30,\n                    'successors': [\n                        { 'height': 0, 'baseA': 3, 'baseB': 3 },\n                        { 'height': 10, 'baseA': 10, 'baseB': 10 },\n                        { 'height': 0, 'baseA': 4, 'baseB': 4 },\n                        { 'height': 10, 'baseA': 10, 'baseB': 10 },\n                        { 'height': 0, 'baseA': 3, 'baseB': 3 }\n                    ]\n                }]\n            },\n            'Sleeves (make 2)': {\n                'height': 4,\n                'baseA': 10,\n                'baseB': 10,\n                'successors': [\n                    { 'height': 20, 'baseA': 10, 'baseB': 21 }\n                ]\n            }\n        }\n    }\n];\n\nconst colorworkCharts = {\n    'Solid': [[0]],\n    'Stripes_2x2': [[0, 0, 1, 1]],\n    'Stripes_4x2': [[0, 0, 0, 0, 1, 1]],\n    'Stripes_4x4': [[0, 0, 0, 0, 1, 1, 1, 1]],\n    'Checkerboard': [\n        [0, 1],\n        [1, 0]\n    ],\n    'Checkerboard_4x4': [\n        [0, 0, 1, 1],\n        [0, 0, 1, 1],\n        [1, 1, 0, 0],\n        [1, 1, 0, 0]\n    ],\n    'Arguyle': [\n        [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],\n        [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],\n        [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],\n        [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],\n        [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],\n        [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],\n        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n        [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],\n        [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],\n        [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],\n        [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],\n        [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],\n        [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]\n    ]\n};\n\nconst visualMotifs = {\n    /*\n        {\n            type: 'SOLID|STANDED|INTARSIA',\n            primaryMotif: 'Stripes_4x2',\n            secondaryMotifs: ['stripes_4x4'],\n            defaultColors: ['#ffffff'],\n            successor: null,\n            truncatedBy: 0,\n            horizontalRepeat: 5|undefined,\n            verticalRepeat 10|undefined,\n            height: 5|undefined, // if *motif* properties are defined, height is unused (infer from motifs+repeats)\n        },\n    */\n    blackAndWhiteStripes: new VisualMotif({\n        type: 'SOLID',\n        defaultColors: ['#ffffff'],\n        verticalRepeat: 10,\n        height: 4,\n        successor: {\n            type: 'SOLID',\n            defaultColors: ['#ffffff'],\n            height: 2\n        }\n    }),\n    redAndWhiteStripes: new VisualMotif({\n        type: 'SOLID',\n        defaultColors: ['#ff0000'],\n        verticalRepeat: 10,\n        height: 4,\n        successor: {\n            type: 'SOLID',\n            defaultColors: ['#ffffff'],\n            verticalRepeat: 10,\n            height: 4\n        }\n    }),\n    checkerboard: new VisualMotif({\n        type: 'STRANDED',\n        defaultColors: ['#ffffff', '#000000'],\n        primaryMotif: 'Checkerboard',\n        verticalRepeat: 4\n    }),\n    argyle: new VisualMotif({\n        type: 'INTARSIA',\n        defaultColors: ['#ffffff', '#000000'],\n        primaryMotif: 'Argyle'\n    }),\n    solidWhite: new VisualMotif({\n        type: 'SOLID',\n        defaultColors: ['#ffffff'],\n        verticalRepeat: 10,\n        height: 4\n    })\n\n};\n\n\nexport { garments, colorworkCharts, visualMotifs };","export type PanelBounds = {\n  minX: number;\n  maxX: number;\n  minY: number;\n  maxY: number;\n};\n\nexport type PanelDimensions = {\n  widthInches: number;\n  heightInches: number;\n  bounds: PanelBounds;\n};\n\nconst toNumber = (value: any): number => {\n  if (typeof value === 'number' && Number.isFinite(value)) {\n    return value;\n  }\n  const parsed = Number(value);\n  return Number.isFinite(parsed) ? parsed : 0;\n};\n\nconst clampNonNegative = (value: number): number => (value < 0 ? 0 : value);\n\nconst normalizeScale = (scale: number): number => {\n  const numeric = toNumber(scale);\n  return numeric === 0 ? 1 : Math.abs(numeric);\n};\n\nconst traverseShape = (\n  trap: any,\n  scale: number,\n  xOffset: number,\n  yOffset: number,\n  bounds: PanelBounds\n): void => {\n  if (!trap || typeof trap !== 'object') {\n    return;\n  }\n\n  const baseA = clampNonNegative(toNumber(trap.baseA));\n  const baseB = clampNonNegative(toNumber(trap.baseB));\n  const height = clampNonNegative(toNumber(trap.height));\n  const horizontalOffset = toNumber(trap.baseBHorizontalOffset);\n\n  const scaledBaseA = baseA * scale;\n  const scaledBaseB = baseB * scale;\n  const scaledHeight = height * scale;\n  const trapWidth = Math.max(scaledBaseA, scaledBaseB);\n\n  const topLeftX = xOffset + (trapWidth - scaledBaseB) / 2 + horizontalOffset * scale;\n  const topRightX = xOffset + (trapWidth + scaledBaseB) / 2 + horizontalOffset * scale;\n  const bottomLeftX = xOffset + (trapWidth - scaledBaseA) / 2;\n  const bottomRightX = xOffset + (trapWidth + scaledBaseA) / 2;\n  const topY = yOffset;\n  const bottomY = yOffset + scaledHeight;\n\n  bounds.minX = Math.min(bounds.minX, topLeftX, topRightX, bottomLeftX, bottomRightX);\n  bounds.maxX = Math.max(bounds.maxX, topLeftX, topRightX, bottomLeftX, bottomRightX);\n  bounds.minY = Math.min(bounds.minY, topY, bottomY);\n  bounds.maxY = Math.max(bounds.maxY, topY, bottomY);\n\n  const successors = Array.isArray(trap.successors)\n    ? trap.successors.filter((s: any) => s && typeof s === 'object')\n    : [];\n\n  if (!successors.length) {\n    return;\n  }\n\n  const successorWidths = successors.map((successor: any) => {\n    const succBaseA = clampNonNegative(toNumber(successor.baseA));\n    const succBaseB = clampNonNegative(toNumber(successor.baseB));\n    return Math.max(succBaseA, succBaseB) * scale;\n  });\n\n  const totalWidth = successorWidths.reduce((sum: number, w: number) => sum + w, 0);\n  let childOffset = xOffset + (trapWidth - totalWidth) / 2;\n\n  successors.forEach((successor: any, index: number) => {\n    const successorHeight = clampNonNegative(toNumber(successor.height)) * scale;\n    const successorWidth = successorWidths[index] || 0;\n    traverseShape(successor, scale, childOffset, topY - successorHeight, bounds);\n    childOffset += successorWidth;\n  });\n};\n\nexport const calculatePanelDimensions = (\n  shape: any,\n  scale = 1\n): PanelDimensions | null => {\n  if (!shape || typeof shape !== 'object') {\n    return null;\n  }\n\n  const safeScale = normalizeScale(scale || 1);\n\n  const bounds: PanelBounds = {\n    minX: Number.POSITIVE_INFINITY,\n    maxX: Number.NEGATIVE_INFINITY,\n    minY: Number.POSITIVE_INFINITY,\n    maxY: Number.NEGATIVE_INFINITY\n  };\n\n  traverseShape(shape, safeScale, 0, 0, bounds);\n\n  if (!Number.isFinite(bounds.minX) || !Number.isFinite(bounds.maxX) || !Number.isFinite(bounds.minY) || !Number.isFinite(bounds.maxY)) {\n    return null;\n  }\n\n  const widthInches = bounds.maxX - bounds.minX;\n  const heightInches = bounds.maxY - bounds.minY;\n\n  if (!Number.isFinite(widthInches) || !Number.isFinite(heightInches)) {\n    return null;\n  }\n\n  return {\n    widthInches,\n    heightInches,\n    bounds\n  };\n};\n\nexport default calculatePanelDimensions;\n","import React, { useState, useMemo, useRef, useEffect, useCallback } from 'react';\nimport { InputNumber, Form, Button, Input, Divider, Select, Collapse, Space, Typography } from 'antd';\nimport ColorworkPanelEditor from '../../../components/ColorworkPanelEditor';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updatePatternData, selectPatternData, nextStep, previousStep, selectCurrentStep } from '../../../store/knittingDesignSlice';\nimport { garments } from '../../../data/garments';\nimport { loadFullLibrary, setFullLibrary, clearEntries } from '../../../store/librarySlice';\nimport { useDriveAuth } from '../../colorwork-designer/context/DriveAuthContext';\nimport { calculatePanelDimensions } from '../utils/panelDimensions';\n\nconst WizardView: React.FC = () => {\n  const dispatch = useDispatch();\n  const patternData: any = useSelector(selectPatternData);\n  const currentStep: number = useSelector(selectCurrentStep) || 0;\n  const [name, setName] = useState<string>(patternData?.name || '');\n  \n  // Get authentication state\n  const { isSignedIn } = useDriveAuth();\n  \n  // Get library panels from global state\n  const libraryData: any = useSelector((state: any) => state.library?.fullLibrary);\n\n  // Load library when authentication state changes\n  useEffect(() => {\n    if (isSignedIn) {\n      dispatch(loadFullLibrary() as any);\n    } else {\n      // Clear library data when logged out\n      dispatch(setFullLibrary(null));\n      dispatch(clearEntries());\n    }\n  }, [isSignedIn, dispatch]);\n\n  // Build a flat list of panels from garments with unique keys\n  const panelList = useMemo(() => {\n    const out: Array<{ key: string; garmentTitle: string; garmentPermalink: string; panelName: string }> = [];\n    \n    // Add panels from built-in garments\n    (garments || []).forEach((g: any) => {\n      const shapes = g.shapes || {};\n      Object.keys(shapes).forEach((panelName) => {\n        out.push({ key: `${g.permalink}::${panelName}`, garmentTitle: g.title, garmentPermalink: g.permalink, panelName });\n      });\n    });\n    \n    // Add panels from user's library\n    if (libraryData && libraryData.panels) {\n      Object.keys(libraryData.panels).forEach((panelId) => {\n        const panel = libraryData.panels[panelId];\n        const panelName = panel.name || panelId;\n        // Use 'library' as permalink to distinguish from garments\n        out.push({ \n          key: `library::${panelId}`, \n          garmentTitle: 'My Library', \n          garmentPermalink: 'library', \n          panelName \n        });\n      });\n    }\n    \n    return out;\n  }, [libraryData]);\n\n  // Initialize counts from patternData.panels.panelsNeeded or defaults to 0\n  const initialCounts: Record<string, number> = (patternData && patternData.panels && patternData.panels.panelsNeeded) || {};\n  const [panelCounts, setPanelCounts] = useState<Record<string, number>>(() => ({ ...initialCounts }));\n\n  const setCount = (key: string, value: number | null) => {\n    const v = value == null ? 0 : value;\n    const next = { ...panelCounts, [key]: v };\n    setPanelCounts(next);\n    // Persist to redux under section 'panels'\n    dispatch(updatePatternData({ section: 'panels', data: { panelsNeeded: next } }) as any);\n  };\n\n  // Selected panel for step 3 (key from panelList: `${permalink}::${panelName}`)\n  // Initialize from redux if a previewPanelKey was persisted under patternData.panels\n  const [selectedPanelKey, setSelectedPanelKey] = useState<string | null>(patternData?.panels?.previewPanelKey || null);\n\n  const resolveLibraryPanel = useCallback((panels: any, panelId: string) => {\n    if (!panels) return null;\n    if (Array.isArray(panels)) {\n      return panels.find((panel: any) => panel && (panel.id === panelId || panel.name === panelId));\n    }\n    if (typeof panels === 'object') {\n      if (panels[panelId]) return panels[panelId];\n      const asArray = Object.values(panels);\n      return asArray.find((panel: any) => panel && (panel.id === panelId || panel.name === panelId)) || null;\n    }\n    return null;\n  }, []);\n\n  const getPanelShape = useCallback((panelKey: string | null) => {\n    if (!panelKey) return null;\n    const [permalink, rawPanelId = ''] = panelKey.split('::');\n\n    if (permalink === 'library') {\n      const panelData = resolveLibraryPanel(libraryData?.panels, rawPanelId);\n      if (!panelData) return null;\n      return panelData.shapes || panelData.shape || panelData.panelShape || null;\n    }\n\n    const garment = garments.find((g: any) => g.permalink === permalink);\n    const garmentShapes = garment?.shapes || {};\n    return garmentShapes ? (garmentShapes as any)[rawPanelId as any] : null;\n  }, [libraryData?.panels, resolveLibraryPanel]);\n\n  // Compute currently selected panel keys (where count > 0)\n  const selectedPanels = useMemo(() => {\n    return Object.keys(panelCounts).filter(k => (panelCounts[k] || 0) > 0);\n  }, [panelCounts]);\n\n  const getPanelLabelForKey = useCallback((panelKey: string) => {\n    if (!panelKey) return '';\n    const match = panelList.find(p => p.key === panelKey);\n    if (match) {\n      return `${match.garmentTitle} — ${match.panelName}`;\n    }\n    const [, panelName = 'Panel'] = panelKey.split('::');\n    return panelName;\n  }, [panelList]);\n\n  const handlePreviewKeyChange = useCallback((nextKey: string | null) => {\n    setSelectedPanelKey(nextKey);\n    dispatch(updatePatternData({ section: 'panels', data: { previewPanelKey: nextKey } }) as any);\n  }, [dispatch]);\n\n  // Ensure selectedPanelKey stays valid when selection changes\n  useEffect(() => {\n    // If the user has a persisted preview selection in redux and it's still available, respect it.\n    const persisted = patternData?.panels?.previewPanelKey;\n    if (persisted && selectedPanels.includes(persisted)) {\n      if (selectedPanelKey !== persisted) setSelectedPanelKey(persisted);\n      return;\n    }\n\n    if (!selectedPanelKey && selectedPanels.length > 0) {\n      const pick = selectedPanels[0];\n      setSelectedPanelKey(pick);\n      // Persist a default preview selection so the choice survives navigation/reloads\n      dispatch(updatePatternData({ section: 'panels', data: { previewPanelKey: pick } }) as any);\n    }\n    if (selectedPanelKey && !selectedPanels.includes(selectedPanelKey)) {\n      // selected panel was removed, pick another or null and persist\n      const pick = selectedPanels[0] || null;\n      setSelectedPanelKey(pick);\n      dispatch(updatePatternData({ section: 'panels', data: { previewPanelKey: pick } }) as any);\n    }\n  }, [selectedPanels, selectedPanelKey, patternData?.panels?.previewPanelKey]);\n\n  // Collapsible state handled by AntD Collapse; 'more' toggle controls whether to show all garments\n  const [showAllGarments, setShowAllGarments] = useState<boolean>(true);\n  const [activeCollapseKeys, setActiveCollapseKeys] = useState<string[]>([]);\n\n  // Keep track of previous step so we only initialize collapse keys on step transitions\n  const prevStepRef = useRef<number | null>(null);\n  useEffect(() => {\n    const allTitles = Array.from(new Set(panelList.map(p => p.garmentTitle)));\n\n    // Only run when currentStep or panelList change. Do NOT depend on panelCounts/selectedPanels\n    // so that editing inputs inside a panel doesn't collapse it.\n    if (prevStepRef.current === null || prevStepRef.current !== currentStep) {\n      if (currentStep > 1) {\n        // On transition to after step 2, expand only garments that currently have selections\n        const selectedGarmentTitles = Array.from(new Set(Object.keys(panelCounts)\n          .filter(k => (panelCounts[k] || 0) > 0)\n          .map(k => {\n            const found = panelList.find(p => p.key === k);\n            return found ? found.garmentTitle : null;\n          }).filter(Boolean) as string[]));\n        setActiveCollapseKeys(selectedGarmentTitles);\n        setShowAllGarments(false);\n      } else {\n        // While editing step 2, keep all garment panels collapsed by default\n        setActiveCollapseKeys([]);\n        setShowAllGarments(true);\n      }\n      prevStepRef.current = currentStep;\n    }\n  }, [panelList, currentStep, panelCounts]);\n\n  // Refs for each step so we can autoscroll when a new step appears\n  const stepRefs = useRef<Array<HTMLDivElement | null>>([]);\n\n  // When currentStep changes, scroll the bottom-most rendered step into view\n  useEffect(() => {\n    // Scroll to the currently-visible last step\n    const ref = stepRefs.current[currentStep];\n    if (ref && typeof ref.scrollIntoView === 'function') {\n      // center the new section in view\n      ref.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  }, [currentStep]);\n\n  // Persist full gauge (including derived per-4-inch values and scaleFactor) to redux\n  const persistGauge = (nextFields: Partial<{ stitchesPerInch: number; rowsPerInch: number; scaleFactor: number }>) => {\n    const current = (patternData && patternData.gauge) || {};\n    const merged = { ...current, ...nextFields } as { stitchesPerInch?: number; rowsPerInch?: number; scaleFactor?: number };\n    const scale = typeof merged.scaleFactor === 'number' ? merged.scaleFactor : (merged.scaleFactor ?? 1);\n    const sPerInch = typeof merged.stitchesPerInch === 'number' ? merged.stitchesPerInch : (current.stitchesPerInch || 0);\n    const rPerInch = typeof merged.rowsPerInch === 'number' ? merged.rowsPerInch : (current.rowsPerInch || 0);\n    // Store base gauge (without scale applied) - scale is applied separately when rendering\n    const stitchesPerFourInches = sPerInch * 4;\n    const rowsPerFourInches = rPerInch * 4;\n\n    const toPersist = {\n      stitchesPerInch: sPerInch,\n      rowsPerInch: rPerInch,\n      scaleFactor: scale,\n      stitchesPerFourInches,\n      rowsPerFourInches\n    };\n\n    dispatch(updatePatternData({ section: 'gauge', data: toPersist }) as any);\n  };\n\n  const onGaugeChange = (field: 'stitchesPerInch' | 'rowsPerInch', value: number | null) => {\n    if (value == null) return;\n    // User enters per-4-inches, divide by 4 to get per-inch for storage\n    const perInchValue = value / 4;\n    persistGauge({ [field]: perInchValue } as any);\n  };\n\n  const onScaleChange = (value: number | null) => {\n    if (value == null) return;\n    persistGauge({ scaleFactor: value });\n  };\n\n  const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const v = e.target.value;\n    setName(v);\n    dispatch(updatePatternData({ section: 'meta', data: { name: v } }) as any);\n  };\n\n  // Wrap navigation so we can jump and then scroll\n  const goNext = () => {\n    dispatch(nextStep() as any);\n    // scrolling is handled by effect when currentStep updates from redux\n  };\n  const goPrev = () => dispatch(previousStep() as any);\n\n  return (\n    <div style={{ padding: 12 }}>\n      {/* Render all steps up to and including currentStep so previous steps remain editable */}\n      <div style={{ display: 'flex', flexDirection: 'column', gap: 12 }}>\n        {/* Step 0: Pattern name & gauge (moved up) */}\n        {currentStep >= 0 && (\n          <div\n            ref={el => { stepRefs.current[0] = el; return; }}\n            key=\"step-0\"\n            style={{ padding: 12, borderRadius: 6, background: '#fff' }}\n          >\n            <div style={{ display: 'flex', gap: 12, alignItems: 'flex-start', flexWrap: 'wrap' }}>\n              {/* Title expands to fill available space */}\n              <div style={{ flex: '1 1 320px', minWidth: 220 }}>\n                <label style={{ display: 'block', fontWeight: 700, marginBottom: 6 }}>Pattern name</label>\n                <Input value={name} onChange={onNameChange} />\n              </div>\n\n              {/* Gauge block has fixed preferred width but can wrap under when narrow */}\n              <div style={{ flex: '0 0 280px', minWidth: 200, display: 'flex', gap: 8, alignItems: 'center' }}>\n                <div style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>\n                  <label style={{ fontSize: 13 }}>Stitches per 4\":</label>\n                  <InputNumber min={1} value={patternData?.gauge?.stitchesPerFourInches} onChange={(v: number | null) => onGaugeChange('stitchesPerInch', v)} />\n                </div>\n                <div style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>\n                  <label style={{ fontSize: 13 }}>Rows per 4\":</label>\n                  <InputNumber min={1} value={patternData?.gauge?.rowsPerFourInches} onChange={(v: number | null) => onGaugeChange('rowsPerInch', v)} />\n                </div>\n              </div>\n\n              {/* Scale factor (preview moved to Step 2) */}\n              <div style={{ flex: '0 0 120px', minWidth: 100, display: 'flex', gap: 8, alignItems: 'center' }}>\n                <div style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>\n                  <label style={{ fontSize: 13 }}>Scale</label>\n                  <InputNumber min={0.1} step={0.1} value={patternData?.gauge?.scaleFactor ?? 1} onChange={(v: number | null) => onScaleChange(v)} />\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Step 1: Select panels (moved down) */}\n        {currentStep >= 1 && (\n          <div\n            ref={el => { stepRefs.current[1] = el; return; }}\n            key=\"step-1\"\n            style={{ padding: 12, borderRadius: 6, background: '#fff', marginTop: 4 }}\n          >\n            {/* Group panels by garment title */}\n            <div style={{ display: 'flex', flexDirection: 'column', gap: 16 }}>\n              {(() => {\n                const groups: Record<string, Array<{ key: string; panelName: string }>> = {};\n                panelList.forEach(p => {\n                  if (!groups[p.garmentTitle]) groups[p.garmentTitle] = [];\n                  groups[p.garmentTitle].push({ key: p.key, panelName: p.panelName });\n                });\n\n                const garmentTitles = Object.keys(groups);\n\n                return (\n                  <div>\n                    <Collapse\n                      activeKey={activeCollapseKeys}\n                      onChange={(keys: any) => setActiveCollapseKeys(Array.isArray(keys) ? keys : [keys])}\n                    >\n                      {garmentTitles.map((garmentTitle) => (\n                        // If showAllGarments is false and this garment has no selected panels, skip rendering (hidden)\n                        (!showAllGarments && !groups[garmentTitle].some(gp => selectedPanels.includes(gp.key))) ? null : (\n                          <Collapse.Panel header={garmentTitle} key={garmentTitle}>\n                            <div style={{ display: 'flex', flexWrap: 'wrap', gap: 12 }}>\n                              {groups[garmentTitle].map(({ key, panelName }) => (\n                                <div key={key} style={{ display: 'flex', alignItems: 'center', gap: 8, minWidth: 220 }}>\n                                  <div style={{ minWidth: 160 }}>\n                                    <label style={{ display: 'block', fontSize: 13, color: '#333' }}>{panelName}</label>\n                                    <div style={{ fontSize: 12, color: '#666' }}>\n                                      <InputNumber min={0} value={panelCounts[key] || 0} onChange={(v: number | null) => setCount(key, v)} />\n                                    </div>\n                                  </div>\n                                </div>\n                              ))}\n                            </div>\n                          </Collapse.Panel>\n                        )\n                      ))}\n                    </Collapse>\n\n                    {!showAllGarments && (\n                      <div style={{ marginTop: 8 }}>\n                        <Button type=\"link\" onClick={() => setShowAllGarments(true)}>More...</Button>\n                      </div>\n                    )}\n                  </div>\n                );\n              })()}\n            </div>\n          </div>\n        )}\n\n        {/* Step 2: Colorwork layering using existing ColorworkPanelEditor */}\n        {currentStep >= 2 && (\n          <div\n            ref={el => { stepRefs.current[2] = el; return; }}\n            key=\"step-2\"\n            style={{ padding: 8, borderRadius: 6, background: '#fff', marginTop: 4 }}\n          >\n            <div style={{ minHeight: 360 }}>\n              <Form layout=\"horizontal\">\n                <Form.Item label=\"Choose panel to preview:\" style={{ marginBottom: 8 }}>\n                  <div style={{ display: 'flex', alignItems: 'center', gap: 12, flexWrap: 'wrap' }}>\n                    <Select\n                      value={selectedPanelKey}\n                      onChange={(v: string) => {\n                        setSelectedPanelKey(v);\n                        // persist selection so the preview is restored across navigation\n                        dispatch(updatePatternData({ section: 'panels', data: { previewPanelKey: v } }) as any);\n                      }}\n                      placeholder={selectedPanels.length === 0 ? 'No panels selected in Step 2' : 'Select a panel'}\n                      disabled={selectedPanels.length === 0}\n                      style={{ width: 360 }}\n                    >\n                      {selectedPanels.map((key) => {\n                        const [permalink, panelName] = key.split('::');\n                        const g = panelList.find(p => p.key === key);\n                        const label = g ? `${g.garmentTitle} — ${g.panelName}` : panelName;\n                        return (\n                          <Select.Option key={key} value={key}>{label}</Select.Option>\n                        );\n                      })}\n                    </Select>\n\n                    {/* Per-4-inch preview and panel dimensions to the right of the select */}\n                    <div style={{ padding: '6px 12px', background: '#f5f5f5', borderRadius: 4, fontSize: 12, color: '#333' }}>\n                      {selectedPanelKey && patternData?.gauge ? (() => {\n                        try {\n                          const shape = getPanelShape(selectedPanelKey);\n                          if (!shape) return null;\n\n                          const gauge = patternData.gauge || {};\n                          const scalingFactorRaw = typeof gauge.scaleFactor === 'number' ? gauge.scaleFactor : 1;\n                          const scalingFactor = Number.isFinite(scalingFactorRaw) && scalingFactorRaw > 0 ? scalingFactorRaw : 1;\n                          const dimensions = calculatePanelDimensions(shape, scalingFactor);\n                          if (!dimensions) return null;\n\n                          const stitchesPerFour = typeof gauge.stitchesPerFourInches === 'number'\n                            ? gauge.stitchesPerFourInches\n                            : (typeof gauge.stitchesPerInch === 'number' ? gauge.stitchesPerInch * 4 : 0);\n                          const rowsPerFour = typeof gauge.rowsPerFourInches === 'number'\n                            ? gauge.rowsPerFourInches\n                            : (typeof gauge.rowsPerInch === 'number' ? gauge.rowsPerInch * 4 : 0);\n\n                          if (!stitchesPerFour || !rowsPerFour) {\n                            return `@ ${Math.round(stitchesPerFour || 0)} sts × ${Math.round(rowsPerFour || 0)} rows per 4\"`;\n                          }\n\n                          const stitchesPerInch = stitchesPerFour / 4;\n                          const rowsPerInch = rowsPerFour / 4;\n\n                          const totalStitches = Math.round(dimensions.widthInches * stitchesPerInch);\n                          const totalRows = Math.round(dimensions.heightInches * rowsPerInch);\n\n                          const gaugeText = `@ ${Math.round(stitchesPerFour)} sts × ${Math.round(rowsPerFour)} rows per 4\"`;\n                          const scaleText = scalingFactor === 1 ? '' : `, resized by ${scalingFactor}x`;\n\n                          return `${totalStitches} stitches × ${totalRows} rows ${gaugeText}${scaleText ? `${scaleText}: ` : ': '}` +\n                            `(${dimensions.widthInches.toFixed(1)}\" × ${dimensions.heightInches.toFixed(1)}\")`;\n                        } catch (error) {\n                          console.warn('Error calculating panel dimensions:', error);\n                        }\n                        return null;\n                      })() : (patternData?.gauge ? `@ ${Math.round((patternData.gauge.stitchesPerFourInches || 0))} sts × ${Math.round((patternData.gauge.rowsPerFourInches || 0))} rows per 4\"` : 'No gauge set')}\n                    </div>\n                  </div>\n                </Form.Item>\n              </Form>\n\n              {/* If a panel is selected, pass it as initialPanel to the editor */}\n              {selectedPanelKey ? (\n                (() => {\n                  const shape = getPanelShape(selectedPanelKey);\n\n                  // Pass gauge with scale factor to the editor\n                  const wizardGauge = patternData?.gauge || null;\n                  const stitchesPerFour = wizardGauge && typeof wizardGauge.stitchesPerFourInches === 'number'\n                    ? wizardGauge.stitchesPerFourInches\n                    : (wizardGauge && typeof wizardGauge.stitchesPerInch === 'number' ? wizardGauge.stitchesPerInch * 4 : undefined);\n                  const rowsPerFour = wizardGauge && typeof wizardGauge.rowsPerFourInches === 'number'\n                    ? wizardGauge.rowsPerFourInches\n                    : (wizardGauge && typeof wizardGauge.rowsPerInch === 'number' ? wizardGauge.rowsPerInch * 4 : undefined);\n                  const normalizedGauge = wizardGauge && typeof stitchesPerFour === 'number' && typeof rowsPerFour === 'number'\n                    ? {\n                        stitchesPerFourInches: stitchesPerFour,\n                        rowsPerFourInches: rowsPerFour,\n                        scalingFactor: typeof wizardGauge.scaleFactor === 'number' && wizardGauge.scaleFactor > 0 ? wizardGauge.scaleFactor : 1\n                      }\n                    : null;\n\n                  const initialPanel = {\n                    shape: shape || null,\n                    gauge: normalizedGauge\n                  };\n                  // Use selectedPanelKey as the key, pattern layers are now in Redux so won't be lost\n                  // ColorworkPanelEditor props are not strictly typed here; cast to any\n                  return <ColorworkPanelEditor \n                    key={selectedPanelKey || 'none'} \n                    {...({ \n                      initialPanel, \n                      previewKey: selectedPanelKey,\n                      allSelectedPanelKeys: selectedPanels,\n                      getPanelLabel: getPanelLabelForKey,\n                      onRequestPreviewKeyChange: handlePreviewKeyChange \n                    } as any)} \n                  />;\n                })()\n              ) : (\n                <div style={{ padding: '20px 0', color: '#666' }}>Select a panel above to preview and layer colorwork.</div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div style={{ marginTop: 16 }}>\n        <Button onClick={goPrev} style={{ marginRight: 8 }}>Previous</Button>\n        <Button type=\"primary\" onClick={goNext}>Next</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default WizardView;\n"],"names":["generateGarmentSizes","sizeOrder","getSizeIndex","size","calculateSizeMultiplier","sizeIndex","sizes","mensSize","womensSize","mensSizeIndex","womensSizeIndex","multiplier","sizeName","standardGarmentSizes","garments","toNumber","value","parsed","clampNonNegative","normalizeScale","scale","numeric","traverseShape","trap","xOffset","yOffset","bounds","baseA","baseB","height","horizontalOffset","scaledBaseA","scaledBaseB","scaledHeight","trapWidth","topLeftX","topRightX","bottomLeftX","bottomRightX","topY","bottomY","successors","s","successorWidths","successor","succBaseA","succBaseB","totalWidth","sum","childOffset","index","successorHeight","successorWidth","calculatePanelDimensions","shape","safeScale","widthInches","heightInches","WizardView","dispatch","useDispatch","patternData","useSelector","selectPatternData","currentStep","selectCurrentStep","name","setName","useState","isSignedIn","useDriveAuth","libraryData","state","useEffect","loadFullLibrary","setFullLibrary","clearEntries","panelList","useMemo","out","g","shapes","panelName","panelId","initialCounts","panelCounts","setPanelCounts","setCount","key","v","next","updatePatternData","selectedPanelKey","setSelectedPanelKey","resolveLibraryPanel","useCallback","panels","panel","getPanelShape","panelKey","permalink","rawPanelId","panelData","garmentShapes","selectedPanels","k","getPanelLabelForKey","match","p","handlePreviewKeyChange","nextKey","persisted","pick","showAllGarments","setShowAllGarments","activeCollapseKeys","setActiveCollapseKeys","prevStepRef","useRef","selectedGarmentTitles","found","stepRefs","ref","persistGauge","nextFields","current","merged","sPerInch","rPerInch","stitchesPerFourInches","rowsPerFourInches","onGaugeChange","field","perInchValue","onScaleChange","onNameChange","goNext","nextStep","goPrev","previousStep","jsxs","jsx","el","Input","InputNumber","groups","garmentTitles","Collapse","keys","garmentTitle","gp","Button","Form","Select","label","gauge","scalingFactorRaw","scalingFactor","dimensions","stitchesPerFour","rowsPerFour","stitchesPerInch","rowsPerInch","totalStitches","totalRows","gaugeText","scaleText","error","wizardGauge","normalizedGauge","initialPanel","ColorworkPanelEditor"],"mappings":"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"}