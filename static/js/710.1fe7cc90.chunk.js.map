{"version":3,"file":"static/js/710.1fe7cc90.chunk.js","mappings":"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","sources":["apps/recipes/components/RecipeList.js","apps/recipes/styles/fontStyles.js","apps/recipes/components/RecipeControls.js","apps/recipes/components/RecipeDetail.js","apps/recipes/components/ReaderView.js","data/recipes/index.js","data/recipes/breads.js","data/recipes/dinners.js","data/recipes/desserts.js","data/recipes/sides.js","apps/recipes/RecipesApp.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { SimpleTreeView } from '@mui/x-tree-view/SimpleTreeView';\nimport { TreeItem } from '@mui/x-tree-view/TreeItem';\nimport { Box, TextField } from '@mui/material';\n\nconst RecipeList = ({ recipes, onSelectRecipe, fontSize }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [expandedItems, setExpandedItems] = useState([]);\n\n  // Helper function to check if a recipe contains the search term - memoized\n  const recipeMatchesSearch = useMemo(() => {\n    return (recipe) => {\n      if (!searchTerm.trim()) return true;\n\n      const term = searchTerm.toLowerCase();\n      // Check if any property in the recipe contains the search term\n      return Object.values(recipe).some(value => {\n        if (typeof value === 'string') {\n          return value.toLowerCase().includes(term);\n        } else if (Array.isArray(value)) {\n          return value.some(item =>\n            typeof item === 'string' && item.toLowerCase().includes(term)\n          );\n        }\n        return false;\n      });\n    };\n  }, [searchTerm]);\n\n  // Filter regular recipes by section - memoized to prevent infinite loops\n  const filteredRecipes = useMemo(() => {\n    return Object.entries(recipes).reduce((acc, [sectionKey, sectionRecipes]) => {\n      const filtered = sectionRecipes.filter(recipeMatchesSearch);\n      if (filtered.length > 0) {\n        acc[sectionKey] = filtered;\n      }\n      return acc;\n    }, {});\n  }, [recipes, searchTerm]); // Only depend on recipes and searchTerm, not the function itself\n\n  // Auto-expand all sections when user is searching\n  React.useEffect(() => {\n    if (searchTerm.trim()) {\n      // When searching, expand all sections that have results\n      const sectionsWithResults = Object.keys(filteredRecipes);\n      setExpandedItems(sectionsWithResults);\n    } else {\n      // When not searching, collapse all sections\n      setExpandedItems([]);\n    }\n  }, [searchTerm, filteredRecipes]);\n\n  const handleItemSelectionToggle = (event, itemId, isSelected) => {\n    // Find the recipe by itemId (permalink) in original recipes (not filtered)\n    for (const [sectionKey, sectionRecipes] of Object.entries(recipes)) {\n      const recipe = sectionRecipes.find(recipe => recipe.permalink === itemId);\n      if (recipe) {\n        onSelectRecipe(recipe);\n        break;\n      }\n    }\n  };\n\n  const handleExpandedItemsChange = (event, itemIds) => {\n    setExpandedItems(itemIds);\n  };\n\n  return (\n    <div className=\"recipe-list\" style={{ fontSize: `${fontSize}%` }}>\n      <div className=\"search-bar\">\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"Filter by ingredients, etc.\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          sx={{ mb: 2 }}\n        />\n      </div>\n\n      <div className=\"recipe-items\">\n        {Object.keys(filteredRecipes).length > 0 ? (\n          <Box sx={{ minHeight: 352, minWidth: 300 }}>\n            <SimpleTreeView\n              expandedItems={expandedItems}\n              onExpandedItemsChange={handleExpandedItemsChange}\n              onItemSelectionToggle={handleItemSelectionToggle}\n              sx={{\n                '& .MuiTreeItem-content': {\n                  padding: '8px',\n                  '&:hover': {\n                    backgroundColor: '#f5f5f5',\n                  },\n                },\n                '& .MuiTreeItem-label': {\n                  fontSize: 'inherit',\n                },\n              }}\n            >\n              {Object.entries(filteredRecipes).map(([sectionKey, sectionRecipes]) => (\n                <TreeItem \n                  key={sectionKey} \n                  itemId={sectionKey} \n                  label={sectionKey.charAt(0).toUpperCase() + sectionKey.slice(1)}\n                >\n                  {sectionRecipes.map(recipe => (\n                    <TreeItem \n                      key={recipe.permalink} \n                      itemId={recipe.permalink} \n                      label={recipe.title}\n                    />\n                  ))}\n                </TreeItem>\n              ))}\n            </SimpleTreeView>\n          </Box>\n        ) : (\n          <p>No recipes found.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeList;\n","// Shared font styles for recipe application\nexport const fixedFontStyle = { fontSize: '16px' };\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearchMinus, faSearchPlus } from '@fortawesome/free-solid-svg-icons';\nimport { fixedFontStyle } from '../styles/fontStyles';\nimport '../styles/RecipeControls.css';\n\nconst RecipeControls = ({ \n  currentView, \n  onToggleView, \n  fontSize, \n  onFontSizeChange, \n  scale, \n  onScaleChange,\n  showScaleControl = true \n}) => {\n  return (\n    <div className=\"unified-recipe-controls\">\n      <div className=\"controls-row\">\n        {/* View Toggle Button */}\n        <div className=\"control-group\">\n          <button onClick={onToggleView} className=\"view-toggle-button\">\n            {currentView === 'reader' ? 'Standard View' : 'Reader View'}\n          </button>\n        </div>\n\n        {/* Font Controls */}\n        <div className=\"control-group font-controls\">\n          <button \n            onClick={() => onFontSizeChange(Math.max(70, fontSize - 10))}\n            className=\"zoom-btn zoom-out\"\n            aria-label=\"Decrease font size\"\n          >\n            <FontAwesomeIcon icon={faSearchMinus} />\n          </button>\n          <span style={fixedFontStyle}>Font: {fontSize}%</span>\n          <button \n            onClick={() => onFontSizeChange(Math.min(150, fontSize + 10))}\n            className=\"zoom-btn zoom-in\"\n            aria-label=\"Increase font size\"\n          >\n            <FontAwesomeIcon icon={faSearchPlus} />\n          </button>\n        </div>\n\n        {/* Recipe Scaling Controls */}\n        {showScaleControl && (\n          <div className=\"control-group scale-controls\">\n            <label htmlFor=\"scale\" style={fixedFontStyle}>Scale:</label>\n            <select\n              id=\"scale\"\n              value={scale}\n              onChange={(e) => onScaleChange(parseFloat(e.target.value))}\n              className=\"scale-select\"\n            >\n              <option value=\"0.25\">¼×</option>\n              <option value=\"0.5\">½×</option>\n              <option value=\"0.75\">¾×</option>\n              <option value=\"1\">1×</option>\n              <option value=\"1.25\">1¼×</option>\n              <option value=\"1.5\">1½×</option>\n              <option value=\"1.75\">1¾×</option>\n              <option value=\"2\">2×</option>\n              <option value=\"2.5\">2½×</option>\n              <option value=\"3\">3×</option>\n              <option value=\"4\">4×</option>\n            </select>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeControls;\n","import React, { useState } from 'react';\nimport RecipeControls from './RecipeControls';\nimport { fixedFontStyle } from '../styles/fontStyles';\n\nconst RecipeDetail = ({ recipe, fontSize, onFontSizeChange, currentView, onToggleView }) => {\n  const [scale, setScale] = useState(1);\n  \n  if (!recipe) return null;\n  \n  const scaleIngredient = (ingredient) => {\n    // Check if the ingredient is an object with quantity, unit, and name properties\n    if (typeof ingredient === 'object' && ingredient !== null) {\n      if (ingredient.quantity === undefined) {\n        // When quantity is undefined, just return the unit and name\n        return `${ingredient.name} ${ingredient.unit || ''}`;\n      } else if (ingredient.quantity) {\n        const scaledQuantity = (ingredient.quantity * scale).toFixed(2)\n          .replace(/\\.?0+$/, ''); // Remove trailing zeros\n        return `${scaledQuantity} ${ingredient.unit || ''} ${ingredient.name}`;\n      }\n    }\n    \n    // For string-type ingredients (backward compatibility)\n    // Make sure ingredient is a string before using match\n    if (typeof ingredient !== 'string') {\n      // Convert non-string, non-object ingredients to string to prevent React child errors\n      return String(ingredient);\n    }\n    \n    const match = ingredient.match(/^([\\d./]+)\\s+(.+)$/);\n    if (match) {\n      const amount = match[1];\n      const rest = match[2];\n      // Calculate scaled amount - this is a simple approach\n      const scaledAmount = (parseFloat(amount) * scale).toFixed(2);\n      // Remove trailing zeros and decimal point if needed\n      const formattedAmount = scaledAmount.replace(/\\.?0+$/, '');\n      return `${formattedAmount} ${rest}`;\n    }\n    return ingredient;\n  };\n  \n  return (\n    <div \n      className=\"recipe-detail\"\n      style={{ fontSize: `${fontSize}%` }}\n    >\n      <div className=\"recipe-header\">\n        <h3>{recipe.title}</h3>\n      </div>\n      \n      {/* Unified Controls */}\n      <RecipeControls\n        currentView={currentView}\n        onToggleView={onToggleView}\n        fontSize={fontSize}\n        onFontSizeChange={onFontSizeChange}\n        scale={scale}\n        onScaleChange={setScale}\n        showScaleControl={true}\n      />\n      \n      <div className=\"recipe-content\">\n        <div className=\"ingredients-section\">\n          <h6>Ingredients</h6>\n          <ul>\n            {recipe.ingredients.map((ingredient, i) => {\n              // Ensure ingredient is properly formatted as string before rendering\n              const formattedIngredient = typeof ingredient === 'object' ? \n                scaleIngredient(ingredient) : \n                scaleIngredient(ingredient);\n              return <li key={i}>{formattedIngredient}</li>;\n            })}\n          </ul>\n        </div>\n        \n        <div className=\"instructions-section\">\n          <h6>Instructions</h6>\n          {recipe.steps && (\n            <ol>\n              {recipe.steps.map((step, i) => (\n                <li key={i}>{step}</li>\n              ))}\n            </ol>\n          )}\n        </div>\n\n        {recipe.notes && recipe.notes.length > 0 && (\n          <div className=\"notes-section\">\n            <h6>Notes</h6>\n            <ul>\n              {recipe.notes.map((note, i) => (\n                <li key={i}>{note}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeDetail;\n","import React, { useState } from 'react';\nimport RecipeControls from './RecipeControls';\nimport { fixedFontStyle } from '../styles/fontStyles';\n\nconst ReaderView = ({ recipe, fontSize, onFontSizeChange, onToggleView }) => {\n  const [scale, setScale] = useState(1);\n\n  if (!recipe) return null;\n\n  const scaleIngredient = (ingredient) => {\n    // If ingredient is an object with quantity, unit and name properties\n    if (ingredient && typeof ingredient === 'object' && 'quantity' in ingredient) {\n      const scaledQuantity = ingredient.quantity * scale;\n      const formattedQuantity = scaledQuantity.toFixed(2).replace(/\\.?0+$/, '');\n      return {\n        ...ingredient,\n        quantity: formattedQuantity\n      };\n    }\n\n    // Handle string ingredients (legacy format)\n    if (ingredient === null || ingredient === undefined) return ingredient;\n\n    const ingredientStr = String(ingredient);\n    const match = ingredientStr.match(/^([\\d./]+)\\s+(.+)$/);\n    if (match) {\n      const amount = match[1];\n      const rest = match[2];\n      const scaledAmount = (parseFloat(amount) * scale).toFixed(2);\n      const formattedAmount = scaledAmount.replace(/\\.?0+$/, '');\n      return `${formattedAmount} ${rest}`;\n    }\n    return ingredient;\n  };\n\n  // Function to render ingredient based on its type\n  const renderIngredient = (ingredient) => {\n    if (ingredient && typeof ingredient === 'object') {\n      const scaledIngredient = scaleIngredient(ingredient);\n      return `${scaledIngredient.quantity} ${scaledIngredient.unit || ''} ${scaledIngredient.name}`.trim();\n    }\n    return scaleIngredient(ingredient);\n  };\n\n  return (\n    <div className=\"reader-view\" style={{ fontSize: `${fontSize}%` }}>\n      <div className=\"reader-header\">\n        <div className=\"reader-title\">\n          <h3>{recipe.title}</h3>\n        </div>\n      </div>\n\n      {/* Unified Controls */}\n      <RecipeControls\n        currentView=\"reader\"\n        onToggleView={onToggleView}\n        fontSize={fontSize}\n        onFontSizeChange={onFontSizeChange}\n        scale={scale}\n        onScaleChange={setScale}\n        showScaleControl={true}\n      />\n\n      <div className=\"reader-split-view\">\n        <div className=\"reader-ingredients\">\n          <h6>Ingredients</h6>\n          <ul>\n            {recipe.ingredients.map((ingredient, i) => (\n              <li key={i}>{renderIngredient(ingredient)}</li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"reader-instructions\">\n          <h6>Instructions</h6>\n          {recipe.steps && (\n            <ol>\n              {recipe.steps.map((step, i) => (\n                <li key={i}>{step}</li>\n              ))}\n            </ol>\n          )}\n          {recipe.notes && (\n            <>\n              <h6>Notes</h6>\n              <p>{recipe.notes}</p>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReaderView;\n","import Sides from './sides';\nimport Breads from './breads';\nimport Dinners from './dinners';\nimport Desserts from './desserts';\nexport default {\n    'Breads and Pastries': Breads,\n    Dinners,\n    Desserts,\n    'Sides and Snacks': Sides,\n};\n","export default [\r\n    {\r\n        \"title\": \"Amish Cinnamon Swirl Bread\",\r\n        \"description\": \"A pillow-y, soft, and sweet bread with a cinnamon swirl, perfect for breakfast or dessert.\",\r\n        \"permalink\": \"cinnamon-swirl-bread\",\r\n        \"defaultServings\": 2,\r\n        \"servingUnits\": \"loaves\",\r\n        \"scalable\": true,\r\n        \"ingredients\": [\r\n            {\r\n                \"name\": \"Active Dry Yeast\",\r\n                \"quantity\": 1.5,\r\n                \"unit\": \"Tbsp\"\r\n            },\r\n            {\r\n                \"name\": \"Warm Water\",\r\n                \"quantity\": 480,\r\n                \"unit\": \"ml\"\r\n            },\r\n            {\r\n                \"name\": \"Granulated Sugar\",\r\n                \"quantity\": 67,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Butter or Oil\",\r\n                \"quantity\": 80,\r\n                \"unit\": \"ml\"\r\n            },\r\n            {\r\n                \"name\": \"Mashed Potatoes (or potato flakes + water)\",\r\n                \"quantity\": 120,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Salt\",\r\n                \"quantity\": 2.5,\r\n                \"unit\": \"tsp\"\r\n            },\r\n            {\r\n                \"name\": \"King Arthur Bread Flour\",\r\n                \"quantity\": 625,\r\n                \"unit\": \"g\",\r\n            },\r\n            {\r\n                \"name\": \"Powdered Confectioners Sugar\",\r\n                \"quantity\": 80,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Ground Cinnamon\",\r\n                \"quantity\": 2,\r\n                \"unit\": \"Tbsp\"\r\n            }\r\n        ],\r\n        \"steps\": [\r\n            \"Mix 1 Tbsp flour, 1 Tbsp sugar, and yeast in a mixing bowl. Add warm water, stir, and let rest for 5 minutes until foamy.\",\r\n            \"In another bowl, whisk to combine sugar, oil, mashed potatoes, and salt to the yeast mixture.\",\r\n            \"Add 4 ½ cups (about 560g) of flour and mix. Continue kneading, adding more flour as needed, until dough pulls away from the bowl sides.\",\r\n            \"Drizzle oil into the bowl to grease the sides. Cover with a dish towel and let rise for about 1 hour.\",\r\n            \"Grease 2 (9x5\\\") loaf pans. Punch down the dough, knead briefly, and divide in half.\",\r\n            \"Roll each half into an 8\\\" by 14\\\" rectangle. Spread powdered sugar and cinnamon over each. Roll tightly from the short end and place seam-side down in loaf pans.\",\r\n            \"Let rise for another 30 minutes until slightly above the pan edge. Preheat oven to 350°F (175°C).\",\r\n            \"Bake for 30–35 minutes, depending on pan thickness.\",\r\n            \"Brush tops with butter, cool for 10 minutes, and remove from pans. Cool completely before storing.\"\r\n        ],\r\n        \"notes\": [\r\n            \"To make Cinnamon Raisin Bread, add 1½–2 cups raisins to the dough with the flour.\",\r\n            \"Optional glaze: Mix 1 cup powdered sugar, ½ tsp vanilla, and ~1½ Tbsp milk. Drizzle over cooled loaves.\",\r\n            \"Mashed potatoes help keep the bread soft and fresh.\",\r\n            \"Freeze one loaf unless consumed within 3–4 days.\"\r\n        ]\r\n    },\r\n    {\r\n        \"title\": \"Bacon Maple Walnut Muffins\",\r\n        \"description\": \"Savory-sweet muffins with crispy bacon, real maple syrup, and toasted walnuts, made with freshly milled soft white wheat and enriched with buttermilk.\",\r\n        \"permalink\": \"bacon-maple-walnut-muffins\",\r\n        \"defaultServings\": 12,\r\n        \"servingUnits\": \"muffins\",\r\n        \"scalable\": true,\r\n        \"ingredients\": [\r\n            {\r\n                \"name\": \"Soft White Wheat Berries\",\r\n                \"quantity\": 250,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Baking Powder\",\r\n                \"quantity\": 15,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Baking Soda\",\r\n                \"quantity\": 2,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Fine Salt\",\r\n                \"quantity\": 1,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Brown Sugar (light or dark)\",\r\n                \"quantity\": 80,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Maple Syrup (preferably Grade B or dark amber)\",\r\n                \"quantity\": 80,\r\n                \"unit\": \"ml\"\r\n            },\r\n            {\r\n                \"name\": \"Buttermilk\",\r\n                \"quantity\": 300,\r\n                \"unit\": \"ml\"\r\n            },\r\n            {\r\n                \"name\": \"Rendered Bacon Fat\",\r\n                \"quantity\": 40,\r\n                \"unit\": \"ml\"\r\n            },\r\n            {\r\n                \"name\": \"Butter (melted)\",\r\n                \"quantity\": 40,\r\n                \"unit\": \"ml\"\r\n            },\r\n            {\r\n                \"name\": \"Egg (or egg substitute)\",\r\n                \"quantity\": 1,\r\n                \"unit\": \"large\"\r\n            },\r\n            {\r\n                \"name\": \"Vanilla Extract\",\r\n                \"quantity\": 5,\r\n                \"unit\": \"ml\"\r\n            },\r\n            {\r\n                \"name\": \"Cooked Bacon, chopped\",\r\n                \"quantity\": 100,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Toasted Walnuts, chopped\",\r\n                \"quantity\": 75,\r\n                \"unit\": \"g\"\r\n            }\r\n        ],\r\n        \"steps\": [\r\n            \"Preheat oven to 400°F (200°C). Line or grease a muffin tin.\",\r\n            \"Mill soft white wheat berries into flour. Toast walnuts while the oven heats, if needed.\",\r\n            \"In a large bowl, whisk together flour, baking powder, baking soda, salt, and brown sugar.\",\r\n            \"In another bowl, whisk together buttermilk, maple syrup, bacon fat, melted butter, egg, and vanilla extract.\",\r\n            \"Pour wet mixture into dry ingredients. Stir until just combined.\",\r\n            \"Fold in chopped cooked bacon and toasted walnuts. Don’t overmix.\",\r\n            \"Spoon batter into muffin cups about ¾ full. Optional: sprinkle tops with extra chopped walnuts or a pinch of flaky salt.\",\r\n            \"Bake 18–22 minutes, until golden and a toothpick comes out clean.\",\r\n            \"Cool in the pan 5 minutes, then move to a rack. Best served warm!\"\r\n        ],\r\n        \"notes\": [\r\n            \"Chop the bacon finely so it distributes evenly.\",\r\n            \"You can reserve 1–2 tablespoons of chopped bacon for topping each muffin before baking.\",\r\n            \"Grade B maple syrup has deeper flavor—perfect for baking.\",\r\n            \"To make this dairy-free, use plant buttermilk (like oat milk + vinegar) and oil instead of butter.\",\r\n            \"Store muffins airtight at room temp for up to 2 days or freeze for longer.\"\r\n        ]\r\n    },\r\n    {\r\n        \"title\": \"Chocolate Chip Granola Muffins\",\r\n        \"description\": \"Delicious muffins made with banana instead of egg, perfect for a quick breakfast or snack.\",\r\n        \"permalink\": \"maple-granola-muffins\",\r\n        \"defaultServings\": 10,\r\n        \"servingUnits\": \"muffins\",\r\n        \"scalable\": true,\r\n        \"ingredients\": [\r\n            {\r\n                \"name\": \"Soft White Wheat Berries\",\r\n                \"quantity\": 210,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Baking Powder\",\r\n                \"quantity\": 10,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Baking Soda\",\r\n                \"quantity\": 2,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Salt\",\r\n                \"quantity\": 3,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Cinnamon\",\r\n                \"quantity\": 2,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Maple Syrup\",\r\n                \"quantity\": 120,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Milk (non-dairy for vegan)\",\r\n                \"quantity\": 120,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Neutral Oil\",\r\n                \"quantity\": 60,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Mashed Banana\",\r\n                \"quantity\": 60,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Vanilla Extract\",\r\n                \"quantity\": 2,\r\n                \"unit\": \"tsp\"\r\n            },\r\n            {\r\n                \"name\": \"Granola\",\r\n                \"quantity\": 75,\r\n                \"unit\": \"g\",\r\n            },\r\n            {\r\n                \"name\": \"Chopped Nuts, Dried Fruit, or Mini Chocolate Chips (optional)\",\r\n                \"quantity\": 50,\r\n                \"unit\": \"g\"\r\n            }\r\n        ],\r\n        \"steps\": [\r\n            \"Preheat oven to 350°F (175°C). Line or grease a muffin tin.\",\r\n            \"Mill the soft white wheat berries into flour.\",\r\n            \"In a bowl, measure out and combine the granola and any optional mix-ins, and set aside.\",\r\n            \"In a large bowl, whisk together flour, baking powder, baking soda, salt, and cinnamon.\",\r\n            \"In another bowl, combine maple syrup, milk, oil, banana, and vanilla.\",\r\n            \"Pour about 2/3 of the dry ingredients into the wet ingredients and stir until fully combined.\",\r\n            \"Add the granola and any optional mix-ins to the remaining dry ingredients, then add to the wet batter and stir just until there isn't any dry flour showing. Do not overmix.\",\r\n            \"Spoon batter into muffin cups about ¾ full. Sprinkle tops with extra granola.\",\r\n            \"Bake for 18–22 minutes, or until a toothpick comes out clean.\",\r\n            \"Let cool in the pan for 5 minutes, then transfer to a rack to cool completely.\"\r\n        ],\r\n        \"notes\": [\r\n            \"Adjust the amount of granola and inclusion to your preference.\",\r\n            \"These muffins can be stored in an airtight container at room temperature for up to 3 days, in the fridge for a week, or frozen for up to 2 months. Let them cool completely before refrigerating or freezing in an airtight container (ziploc/tupperware).\",\r\n        ]\r\n    },\r\n    {\r\n        \"title\": \"English Muffins\",\r\n        \"description\": \"These buttery, sweet English muffins are so delicious, I could mistake them for a biscuit! Serve them toasted with butter and jam, or use them for breakfast sandwiches.\",\r\n        \"permalink\": \"english-muffins\",\r\n        \"defaultServings\": 14,\r\n        \"servingUnits\": \"3-inch english muffins\",\r\n        \"scalable\": true,\r\n        \"ingredients\": [\r\n            {\r\n                'name': 'Hard White Wheat Berries',\r\n                'quantity': 500,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Whole Milk (very warm)',\r\n                'quantity': 425,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Butter or Oil',\r\n                'quantity': 43,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Salt',\r\n                'quantity': 1.25,\r\n                'unit': 'tsp'\r\n            },\r\n            {\r\n                'name': 'Sugar or Honey',\r\n                'quantity': 25,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Egg',\r\n                'quantity': 1,\r\n                'unit': 'whole egg'\r\n            },\r\n            {\r\n                'name': 'Instant Yeast',\r\n                'quantity': 2,\r\n                'unit': 'tsp'\r\n            },\r\n        ],\r\n        \"steps\": [\r\n            \"Mill the flour\",\r\n            \"Sift out 50 grams or so of the largest bran pieces. Set the bran aside, we will dust the muffins with it just before cooking.\",\r\n            \"Heat the milk until steamy, but NOT boiling, about 180°F (82°C).\",\r\n            \"Place oil, salt, sugar, and warmed milk into a stand mixer and mix until combined. Once the mixture is cooled enough, add the egg and mix again.\",\r\n            \"Add the flour to the wet mixture. Mix to incorporate.\", \r\n            \"Cover, and let the dough sit for 15 minutes. This is called the autolyse stage, and it allows the flour to absorb the liquid and start to develop gluten, but especially to allow the bran to absorb some of the excess liquid in the mixture.\",\r\n            \"Add the yeast and begin to knead.\",\r\n            \"Kneading the dough on low speed or by hand. The dough should eventually come together and appear smooth but still sticky. This can take up to 25 minutes, be patient with it.\",\r\n            \"Cover and let rise for 1 hour or so, until doubled in size.\",\r\n            \"Sprinkle a clean work bench with a little extra milled flour, or sifted bran. Carefully turn out the dough.\",\r\n            \"Gently roll the dough out to about 3/4 inch thick. Try not to deflate the dough too much, but this is a forgiving dough that can be rerolled and shaped a few times and come out just fine.\",\r\n            \"With a 3-inch cookie cutter oiled or dusted with flour, cut muffins from the dough. Toss each muffin in the reserved bran to coat.\",\r\n            \"Place cut dough onto a lined baking sheet dusted with parchment. Repeat until all dough is used, re-rolling scraps as needed.\",\r\n            \"Cover the muffins with a towel and let them rest for 30 minutes.\",\r\n            \"Preheat a cast iron skillet to 350°F (low heat) for 10 minutes while the English muffins finish resting.\",\r\n            \"Take a few muffins at a time and arrange them in a circle in the cast iron skillet, with 1-2 inches of space between them.\",\r\n            \"Cook for 7 minutes on each side.\",\r\n            \"Place cooked muffins on a wire rack to cool. Clean the skillet between batches to prevent burning.\",\r\n        ],\r\n        \"notes\": [\r\n            \"Store in an airtight container at room temperature for 1-2 days. For longer storage, freeze in a sealed container for up to 3-4 months.\",\r\n            \"I like to split the muffins with a fork instead of cutting with a knife to give muffins a rough texture, great for toasting and spreads. For sandwiches, cutting with a knife is often preferable.\",\r\n            \"These muffins are great to store in the freezer and pull out on the counter to thaw overnight. Fresh tasting muffins in the morning, every morning!\",\r\n            \"To enjoy frozen muffins, thaw at room temperature for a couple of hours before toasting. In a pinch, you can microwave them for 30 seconds to thaw, then toast them.\",\r\n        ]\r\n    },\r\n    {\r\n        \"title\": \"Honey Wheat Sandwich Bread\",\r\n        \"description\": \"A soft, slightly sweet loaf, but slighly dense loaf made with 100% freshly milled hard red wheat\",\r\n        \"permalink\": \"honey-wheat-sandwich-bread\",\r\n        \"defaultServings\": 2,\r\n        \"servingUnits\": \"loaves\",\r\n        \"scalable\": true, // required to see scaling UI\r\n        \"ingredients\": [\r\n            {\r\n                'name': 'Hard Red Wheat Berries',\r\n                'quantity': 750,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Filtered Water',\r\n                'quantity': 675,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Honey, Sugar, or Maple Syrup',\r\n                'quantity': 127.5,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Butter or Oil',\r\n                'quantity': 45,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Salt',\r\n                'quantity': 2.25,\r\n                'unit': 'tsp'\r\n            },\r\n            {\r\n                'name': 'Instant Yeast',\r\n                'quantity': 3,\r\n                'unit': 'tsp'\r\n            },\r\n        ],\r\n        \"steps\": [\r\n            \"Mill the wheat berries into flour\",\r\n            \"Mix all ingredients EXCEPT the yeast in a stand mixer until a shaggy dough forms. Let rest for 15 minutes, up to a couple hours.\",\r\n            \"Add the yeast and knead the dough until it passes the windowpane test. This can take a while in your stand mixer, over 20 minutes.\",\r\n            \"Place the dough in a greased bowl, cover, and let rise until doubled in size (~1 hour).\",\r\n            \"Punch down the dough and shape into loaves. Place in greased loaf pans, cover, and let rise again until the dough is about an inch above the pan (~40 minutes).\",\r\n            \"Preheat the oven to 350 degrees F. Bake the loaves for 30-40 minutes, until the internal temperature is 190 degrees F.\",\r\n            \"Remove the loaves from the oven and let cool in the pans for 5 minutes. Remove from pans and cool on a wire rack.\"\r\n        ],\r\n        \"notes\": [\r\n            \"Store the bread in an unsealed plastic or paper bag at room temperature for up to a week, or freeze sealed in a plastic bag for up to 3 months.\",\r\n            \"This bread can be dressed up with an oat topping, or inclusions like raisins, walnuts, or other dried fruits and nuts.\",\r\n            \"To make rainbow bread, divide the dough into 6 parts and color each with food coloring before shaping and baking. I use Wilton gel food dye, using 5 toothpicks of red, orange and yellow, and 3 toothpicks of green, blue and purple.\",\r\n            \"For a lighter loaf, substitute 1/3 of the whole wheat flour with bread flour.\",\r\n        ],\r\n    },\r\n    {\r\n        \"title\": \"Lemon Blueberry Muffins\",\r\n        \"description\": \"Fluffy and bright lemon blueberry muffins made with buttermilk.\",\r\n        \"permalink\": \"lemon-blueberry-muffins\",\r\n        \"defaultServings\": 12,\r\n        \"servingUnits\": \"muffins\",\r\n        \"scalable\": true,\r\n        \"ingredients\": [\r\n            {\r\n                \"name\": \"Soft White Wheat Berries\",\r\n                \"quantity\": 210,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Cake flour\",\r\n                \"quantity\": 40,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Baking Powder\",\r\n                \"quantity\": 17,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Baking Soda\",\r\n                \"quantity\": 2,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Fine Salt\",\r\n                \"quantity\": 1,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Granulated Sugar\",\r\n                \"quantity\": 100,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Buttermilk\",\r\n                \"quantity\": 360,\r\n                \"unit\": \"ml\"\r\n            },\r\n            {\r\n                \"name\": \"Oil (melted butter, coconut oil, or light olive oil)\",\r\n                \"quantity\": 80,\r\n                \"unit\": \"ml\"\r\n            },\r\n            {\r\n                \"name\": \"Vanilla Extract\",\r\n                \"quantity\": 5,\r\n                \"unit\": \"ml\"\r\n            },\r\n            {\r\n                \"name\": \"Lemon Zest\",\r\n                \"quantity\": 1,\r\n                \"unit\": \"lemon\"\r\n            },\r\n            {\r\n                \"name\": \"Lemon Juice\",\r\n                \"quantity\": 1,\r\n                \"unit\": \"lemon\",\r\n            },\r\n            {\r\n                \"name\": \"Dried Blueberries\",\r\n                \"quantity\": 75,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"Cornstarch or Arrowroot Powder\",\r\n                \"quantity\": 1,\r\n                \"unit\": \"Tbsp\"\r\n            }\r\n        ],\r\n        \"steps\": [\r\n            \"Preheat oven to 400°F (200°C). Line or grease a muffin tin.\",\r\n            \"Mill the soft white wheat berries into flour.\",\r\n            \"In a large bowl, whisk together flour, baking powder, baking soda, salt, sugar, and lemon zest.\",\r\n            \"In another bowl, whisk together buttermilk, oil, vanilla extract, and lemon juice.\",\r\n            \"Pour the wet ingredients into the dry ingredients and stir gently until almost combined.\",\r\n            \"Fold in dried blueberries. Do not overmix.\",\r\n            \"Spoon batter into muffin cups about ¾ full.\",\r\n            \"Bake for 18-22 minutes, or until a toothpick comes out clean.\",\r\n            \"Let cool in the pan for 5 minutes, then transfer to a rack to cool completely.\"\r\n        ],\r\n        \"notes\": [\r\n            \"Adjust sugar and lemon juice to taste.\",\r\n            \"If using frozen blueberries, toss them with cornstarch or arrowroot powder before folding them into the batter to prevent them from sinking.\",\r\n            \"For a tangier flavor, add more lemon zest.\",\r\n            \"If your batter is too thin like a cupcake or pancake batter, add more flour until it thickens more like a loose peanut butter texture.\",\r\n            \"These muffins are best enjoyed fresh but can be stored in an airtight container at room temperature for up to 2 days.\"\r\n        ]\r\n    }\r\n];","export default [\r\n    {\r\n        \"title\": \"Amish Chicken Pot Pie Soup\",\r\n        \"description\": \"A comforting and hearty soup with homemade pot pie noodles\",\r\n        \"permalink\": \"amish-chicken-pot-pie-soup\",\r\n        \"defaultServings\": 6,\r\n        \"servingUnits\": \"servings\",\r\n        \"scalable\": true,\r\n        \"ingredients\": [\r\n            {\r\n                'name': 'Hard Red Wheat Berries',\r\n                'quantity': 1,\r\n                'unit': 'cup'\r\n            },\r\n            {\r\n                'name': 'Egg',\r\n                'quantity': 1,\r\n                'unit': 'whole'\r\n            },\r\n            {\r\n                'name': 'Whole Milk',\r\n                'quantity': 0.25,\r\n                'unit': 'cups'\r\n            },\r\n            {\r\n                'name': 'Unsalted butter',\r\n                'quantity': 1,\r\n                'unit': 'tbsp'\r\n            },\r\n            {\r\n                'name': 'Salt',\r\n                'quantity': 1,\r\n                'unit': 'pinch'\r\n            },\r\n            {\r\n                'name': 'Chicken Breasts or thighs',\r\n                'quantity': 3,\r\n                'unit': 'lbs'\r\n            },\r\n            {\r\n                'name': 'Chicken Bone Broth',\r\n                'quantity': 8,\r\n                'unit': 'cups'\r\n            },\r\n            {\r\n                'name': 'Yukon gold potatoes',\r\n                'quantity': 4,\r\n                'unit': 'medium'\r\n            },\r\n            {\r\n                'name': 'Carrots',\r\n                'quantity': 3,\r\n                'unit': 'medium'\r\n            },\r\n            {\r\n                'name': 'Celery',\r\n                'quantity': 2,\r\n                'unit': 'large stalks'\r\n            },\r\n            {\r\n                'name': 'Sweet Onion',\r\n                'quantity': 1,\r\n                'unit': 'medium'\r\n            },\r\n            {\r\n                'name': 'Salt & pepper',\r\n                'quantity': undefined,\r\n                'unit': 'to taste'\r\n            },\r\n            {\r\n                'name': 'Ground turmeric',\r\n                'quantity': 1,\r\n                'unit': 'pinch'\r\n            }\r\n        ],\r\n        \"steps\": [\r\n            \"In a large pot, bring the chicken bone broth to a boil. Add the chicken breasts and cook until the chicken is fully cooked, about 20-25 minutes. Remove the chicken and set aside to cool.\",\r\n            \"Mill the hard red wheat berries into flour.\",\r\n            \"Wash and chop the potatoes, carrots, celery, and onion.\",\r\n            \"Add the cut potatoes, carrots, celery, and onion to the broth. Season with salt, pepper, and a pinch of ground turmeric. Simmer until the vegetables are tender, about 15-20 minutes.\",\r\n            \"In a bowl, combine 1 cup of freshly ground flour, egg, milk, melted butter, and a pinch of salt. Mix until a dough forms. Roll out the dough on a floured surface and cut into small squares. Set aside.\",\r\n            \"Shred the cooled chicken and return it to the pot.\",\r\n            \"Add the homemade pot pie noodles to the soup one at a time, and cook until they are tender, about 10 minutes.\",\r\n            \"Adjust seasoning with salt and pepper to taste. Serve hot.\"\r\n        ],\r\n        \"notes\": [\r\n            \"For a richer flavor, you can use chicken thighs instead of chicken breasts.\",\r\n            \"Leftovers can be stored in an airtight container in the refrigerator for up to 3 days.\"\r\n        ]\r\n    },\r\n    {\r\n        \"title\": \"Bacon Wrapped Turkey Breast\",\r\n        \"description\": \"A very tender turkey breast\",\r\n        \"permalink\": \"sous-vide-turkey-breast\",\r\n        \"defaultServings\": 1,\r\n        \"servingUnits\": \"breast\",\r\n        \"scalable\": false,\r\n        \"ingredients\": [\r\n            {\r\n                'name': 'Butterball or similar Turkey Breast',\r\n                'quantity': 5,\r\n                'unit': 'Lbs'\r\n            },\r\n            {\r\n                'name': 'Bacon',\r\n                'quantity': 1,\r\n                'unit': 'Lbs'\r\n            },\r\n            {\r\n                'name': 'Garlic Powder',\r\n                'quantity': undefined,\r\n                'unit': 'to taste'\r\n            },\r\n            {\r\n                'name': 'Pepper',\r\n                'quantity': undefined,\r\n                'unit': 'to taste'\r\n            },\r\n            {\r\n                'name': 'Salt',\r\n                'quantity': undefined,\r\n                'unit': 'to taste'\r\n            },\r\n        ],\r\n        \"steps\": [\r\n            \"Setup a sous vide water bath at 145 degrees F\",\r\n            \"Unpackage the turkey breast. Pat it dry, rub it with spices to taste, and place it in a ziploc bag, using the immersion method to remove most of the air so the breast will sink.\",\r\n            \"Cook the breast in the bath for 3 hours\",\r\n            \"Remove the breast from the bath. Pan sear the surface to brown the skin and meat.\"\r\n        ],\r\n        \"notes\": [\"Substitute Garlic Powder with Old Bay or Mrs. Dash for different flavors\"],\r\n    },\r\n    {\r\n        \"title\": \"Halupki Casserole\",\r\n        \"description\": \"An easy, balanced and hearty dish\",\r\n        \"permalink\": \"halupki-casserole\",\r\n        \"defaultServings\": 4,\r\n        \"servingUnits\": \"servings\",\r\n        \"scalable\": true,\r\n        \"ingredients\": [\r\n            {\r\n                \"name\": \"Green Cabbage\",\r\n                \"quantity\": 1,\r\n                \"unit\": \"cabbages\"\r\n            },\r\n            {\r\n                \"name\": \"Ground Meat\",\r\n                \"quantity\": 1,\r\n                \"unit\": \"Lbs\"\r\n            },\r\n            {\r\n                \"name\": \"Worstershire Sauce\",\r\n                \"quantity\": 1,\r\n                \"unit\": \"Tbsp\"\r\n            },\r\n            {\r\n                \"name\": \"Tomato Paste\",\r\n                \"quantity\": 1,\r\n                \"unit\": \"small can\"\r\n            },\r\n            {\r\n                \"name\": \"Sweet Onion\",\r\n                \"quantity\": 1,\r\n                \"unit\": \"onions\"\r\n            },\r\n            {\r\n                \"name\": \"Garlic\",\r\n                \"quantity\": 6,\r\n                \"unit\": \"cloves\"\r\n            },\r\n            {\r\n                \"name\": \"Uncooked Rice\",\r\n                \"quantity\": 1,\r\n                \"unit\": \"cup\"\r\n            }\r\n        ],\r\n        \"steps\": [\r\n            \"Preheat the oven to 350.\",\r\n            \"Brown the ground meat. Drain it and set it aside.\",\r\n            \"Chop the onions and saute with a little oil. Add garlic once onions are almost finished. Remove from heat.\",\r\n            \"Peel some of the bigger leaves from the cabbage and set aside. Chop the remaining cabbage, and fry in the pan with a little oil.\",\r\n            \"Mix the meat with the garlic, onions, and fried shredded cabbage.\",\r\n            \"Place the uncooked rice in the bottom of a casserole dish. Pile with the meat mixture, then add a cup of water or so.\",\r\n            \"Cover with the cabbage leaves set aside from earlier, and then cover with foil and place in the hot oven. Set a timer for 30 minutes.\",\r\n            \"After 30 minutes, uncover. Bake another 5-10 minutes to brown the cabbage on top and set up the rice if it still has too much water.\"\r\n        ],\r\n        \"notes\": []\r\n    },\r\n    {\r\n        \"title\": \"Ham Loaf\",\r\n        \"description\": \"A savory and slightly sweet loaf made with a mix of ground pork and beef\",\r\n        \"permalink\": \"ham-loaf\",\r\n        \"defaultServings\": 6,\r\n        \"servingUnits\": \"servings\",\r\n        \"scalable\": true,\r\n        \"ingredients\": [\r\n            {\r\n                'name': 'Ground Ham',\r\n                'quantity': 1,\r\n                'unit': 'lbs'\r\n            },\r\n            {\r\n                'name': 'Ground Beef',\r\n                'quantity': 1,\r\n                'unit': 'lbs'\r\n            },\r\n            {\r\n                'name': 'Eggs',\r\n                'quantity': 2,\r\n                'unit': 'whole eggs'\r\n            },\r\n            {\r\n                'name': 'Milk',\r\n                'quantity': 80,\r\n                'unit': 'ml'\r\n            },\r\n            {\r\n                'name': 'Breadcrumbs',\r\n                'quantity': 75,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Salt',\r\n                'quantity': 0.5,\r\n                'unit': 'tsp'\r\n            },\r\n            {\r\n                'name': 'Black Pepper',\r\n                'quantity': 0.5,\r\n                'unit': 'tsp'\r\n            },\r\n            {\r\n                'name': 'Paprika',\r\n                'quantity': 0.5,\r\n                'unit': 'tsp'\r\n            },\r\n            {\r\n                'name': 'Brown Sugar',\r\n                'quantity': 150,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Water',\r\n                'quantity': 60,\r\n                'unit': 'ml'\r\n            },\r\n            {\r\n                'name': 'Vinegar',\r\n                'quantity': 30,\r\n                'unit': 'ml'\r\n            },\r\n            {\r\n                'name': 'Dry Mustard',\r\n                'quantity': 1,\r\n                'unit': 'tsp'\r\n            }\r\n        ],\r\n        \"steps\": [\r\n            \"Preheat the oven to 350°F\",\r\n            \"Grind the ham and beef in a food processor or meat grinder.\",\r\n            \"Add the eggs, milk, 1/4 cup of the brown sugar glaze, the breadcrumbs, salt, pepper, and paprika to the meat mixture. Mix until well combined.\",\r\n            \"Shape the mixture into a loaf and place it on a wire rack over a baking sheet.\",\r\n            \"Bake for 1 hour, or until the internal temperature reaches 160°F.\",\r\n            \"While the loaf is baking, prepare the brown sugar glaze. In a small saucepan, combine the brown sugar, water, vinegar, and dry mustard. Bring to a boil over medium heat, stirring constantly. Reduce the heat and simmer for 5 minutes, or until the glaze has thickened slightly. Remove from heat and let cool.\",\r\n            \"During the last 15 minutes of baking, brush the loaf with the brown sugar glaze.\",\r\n            \"Let the ham loaf rest for 10 minutes before slicing and serving.\"\r\n        ],\r\n        \"notes\": [\r\n            \"For a sweeter glaze, mix 1/4 cup of brown sugar with 1/4 cup of pineapple juice and brush it over the loaf during the last 15 minutes of baking.\",\r\n            \"Leftovers can be stored in an airtight container in the refrigerator for up to 5 days.\",\r\n            \"Preground meats will work, but I prefer working with freshly ground meats when possible\",\r\n        ]\r\n    },\r\n    {\r\n        \"title\": \"Pork & Lamb Shepherd's Pie\",\r\n        \"description\": \"A hearty and savory dish full of meat and veggies\",\r\n        \"permalink\": \"shepherds-pie\",\r\n        \"defaultServings\": 3,\r\n        \"servingUnits\": \"servings\",\r\n        \"scalable\": true, // required to see scaling UI\r\n        \"ingredients\": [\r\n            {\r\n                'name': 'peas',\r\n                'quantity': 0.3,\r\n                'unit': 'bags'\r\n            },\r\n            {\r\n                'name': 'carrots',\r\n                'quantity': 0.5,\r\n                'unit': 'bags'\r\n            },\r\n            {\r\n                'name': 'tomato paste',\r\n                'quantity': 12,\r\n                'unit': 'oz'\r\n            },\r\n            {\r\n                'name': 'onion',\r\n                'quantity': 1,\r\n                'unit': 'yellow onion'\r\n            },\r\n            {\r\n                'name': 'butter',\r\n                'quantity': 2,\r\n                'unit': 'tsp'\r\n            },\r\n            {\r\n                'name': 'bacon fat',\r\n                'quantity': 2,\r\n                'unit': 'tsp'\r\n            },\r\n            {\r\n                'name': 'cream',\r\n                'quantity': 0.5,\r\n                'unit': 'cups'\r\n            },\r\n            {\r\n                'name': 'shredded cheese',\r\n                'quantity': 0.5,\r\n                'unit': 'cups'\r\n            },\r\n            {\r\n                'name': 'golden yukon potatoes',\r\n                'quantity': 2,\r\n                'unit': 'lbs'\r\n            },\r\n            {\r\n                'name': 'lamb',\r\n                'quantity': 1.5,\r\n                'unit': 'lbs'\r\n            },\r\n        ],\r\n        \"steps\": [\r\n            \"Preheat the oven to 350 degrees F.\",\r\n            \"Boil water for the potatoes.\",\r\n            \"Debone the lamb and cut into small pieces. Grind. Brown the meat in a large pot. Deglaze with the tomato paste. Set aside in a bowl.\",\r\n            \"Chop the potatoes and start boiling them. Set a timer for 10 minutes, and check for doneness. Mash with a ricer and mix with butter and bacon fat, then salt, pepper, and cream.\",\r\n            \"Peel and chop the onion. Cook on medium high heat stirring infrequently until carmelized some. Place the onion in the bowl with the lamb.\",\r\n            \"Assemble into a casserole dish or pie plate. Start with the lamb and onion mixture, then add the peas and carrots. Top with the mashed potatoes. Add shredded cheese if desired.\",\r\n            \"Bake for 30 minutes, until the top is browned and the pie is heated through.\"\r\n        ],\r\n        \"notes\": [\r\n            \"Refrigerate leftovers for up to a week, or freeze for up to 3 months.\",\r\n            \"This dish can be made with ground beef, turkey, or chicken instead of lamb.\",\r\n        ],\r\n    },\r\n]","export default [\r\n    {\r\n        \"title\": \"Amish Wet Bottom Shoofly Pie\",\r\n        \"description\": \"A traditional Amish breakfast molasses pie\",\r\n        \"permalink\": \"amish-wet-bottom-shoofly-pie\",\r\n        \"defaultServings\": 2,\r\n        \"servingUnits\": \"pies\",\r\n        \"scalable\": true,\r\n        \"ingredients\": [\r\n            {\r\n                \"name\": \"unbaked pie crusts\",\r\n                \"quantity\": 2,\r\n                \"unit\": \"9-inch\"\r\n            },\r\n            {\r\n                \"name\": \"brown sugar (wet mixture)\",\r\n                \"quantity\": 70,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"brown sugar (crumb mixture)\",\r\n                \"quantity\": 200,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"baking soda (wet mixture)\",\r\n                \"quantity\": 1,\r\n                \"unit\": \"tsp\"\r\n            },\r\n            {\r\n                \"name\": \"baking soda (crumb mixture)\",\r\n                \"quantity\": 0.5,\r\n                \"unit\": \"tsp\"\r\n            },\r\n            {\r\n                \"name\": \"large eggs\",\r\n                \"quantity\": 4,\r\n                \"unit\": \"whole eggs\"\r\n            },\r\n            {\r\n                \"name\": \"molasses\",\r\n                \"quantity\": 1.5,\r\n                \"unit\": \"cups\"\r\n            },\r\n            {\r\n                \"name\": \"boiling water\",\r\n                \"quantity\": 1.5,\r\n                \"unit\": \"cups\"\r\n            },\r\n            {\r\n                \"name\": \"flour\",\r\n                \"quantity\": 360,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"salt\",\r\n                \"quantity\": 0.25,\r\n                \"unit\": \"tsp\"\r\n            },\r\n            {\r\n                \"name\": \"cream of tartar\",\r\n                \"quantity\": 0.125,\r\n                \"unit\": \"tsp\"\r\n            },\r\n            {\r\n                \"name\": \"lard, shortening, or butter\",\r\n                \"quantity\": 0.75,\r\n                \"unit\": \"cup\"\r\n            }\r\n        ],\r\n        \"steps\": [\r\n            \"Preheat oven to 425°F.\",\r\n            \"Prepare the pie crusts in pie plates, and set aside.\",\r\n            \"Make the \\\"wet mixture\\\", mix brown sugar and eggs, then incorporate the molasses.\",\r\n            \"Boil the water. Remove from heat and stir in the baking soda.\",\r\n            \"Let the water cool enough to not cook the eggs. Combine the baking soda water and the egg mixture, and set aside.\",\r\n            \"Make the \\\"crumb mixture\\\", in a mixing bowl add flour, brown sugar, salt, baking soda, & cream of tartar and whisk to combine.\",\r\n            \"Add shortening of choice. Using a pastry blender or your mixer, mix until you have fine crumbs.\",\r\n            \"Add a scant 2 cups of the crumbs to the wet molasses mixture. Then divide the wet batter between the two pie crusts.\",\r\n            \"Quickly cover with the reserved crumb mixture (try to get all the edges covered as well).\",\r\n            \"Bake immediately, at 425°F for 10 minutes. Reduce temperature to 350°F and continue baking for another 40 minutes or until the pie is set and not too jiggly.\",\r\n            \"Cool and store, loosely covered, at room temperature. You can also wrap and freeze one pie for later.\"\r\n        ],\r\n        \"notes\": [\r\n            \"I prefer Golden Barrel baking molasses, as it has a mild flavor.\",\r\n            \"Makes 2 x 9-inch pies\",\r\n            \"You can use all purpose flour, but I prefer using my freshly milled flour for this recipe. A soft white wheat is a good pick, einkorn or other ancient grains make a decent substitute.\",\r\n        ]\r\n    },\r\n    {\r\n        \"title\": \"Brown Butter Chocolate Chip Cookies\",\r\n        \"description\": \"Rich and flavorful chocolate chip cookies made with an enriched brown butter\",\r\n        \"permalink\": \"brown-butter-chocolate-chip-cookies\",\r\n        \"defaultServings\": 35,\r\n        \"servingUnits\": \"cookies\",\r\n        \"scalable\": true,\r\n        \"ingredients\": [\r\n            {\r\n                'name': 'Unsalted Butter',\r\n                'quantity': 2,\r\n                'unit': 'sticks'\r\n            },\r\n            {\r\n                'name': 'Dry Milk Powder',\r\n                'quantity': 2,\r\n                'unit': 'tbsp'\r\n            },\r\n            {\r\n                'name': 'Granulated Sugar',\r\n                'quantity': 50,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Brown Sugar',\r\n                'quantity': 200,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Eggs',\r\n                'quantity': 1,\r\n                'unit': 'whole egg'\r\n            },\r\n            {\r\n                'name': 'Egg Yolks',\r\n                'quantity': 2,\r\n                'unit': 'eggs'\r\n            },\r\n            {\r\n                'name': 'Vanilla Extract',\r\n                'quantity': 2,\r\n                'unit': 'tsp'\r\n            },\r\n            {\r\n                'name': 'All-Purpose Flour',\r\n                'quantity': 200,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Baking Soda',\r\n                'quantity': .75,\r\n                'unit': 'tsp'\r\n            },\r\n            {\r\n                'name': 'Diamond Crystal Salt',\r\n                'quantity': 1.25,\r\n                'unit': 'tsp'\r\n            },\r\n            {\r\n                'name': 'Chopped Bittersweet Chocolate',\r\n                'quantity': 200,\r\n                'unit': 'g'\r\n            }\r\n        ],\r\n        \"steps\": [\r\n            \"For same-day bake, Preheat the oven to 350°F. Line baking sheets with parchment paper.\",\r\n            \"In a medium saucepan, melt the butter over medium heat. Once melted, add the dry milk powder and continue to cook, stirring frequently, until the butter turns golden brown and has a nutty aroma. This should take about 5-7 minutes. Remove from heat and let cool slightly.\",\r\n            \"In a large mixing bowl, combine the granulated sugar, brown sugar, and the browned butter (including the milk solids). Mix until well combined.\",\r\n            \"Add the eggs and vanilla extract to the sugar and butter mixture, and beat until smooth and creamy.\",\r\n            \"In a separate bowl, whisk together the flour, baking soda, and salt. Gradually add the dry ingredients to the wet ingredients, mixing until just combined.\",\r\n            \"Fold in the chocolate chips.\",\r\n            \"Cover the dough and refrigerate for at least 1 hour, or overnight for best results.\",\r\n            \"Weigh out the dough into about 45 gram portions. Shape them into balls, and place them on the prepared baking sheets, spacing them about 2 inches apart.\",\r\n            \"Chill in the fridge overnight, or flash freeze for 30 minutes before baking.\",\r\n            \"Add flake salt, then bake for 18 minutes, or until the edges are golden brown and the centers are still slightly soft.\",\r\n            \"Remove from the oven and let the cookies cool on the baking sheets for 5 minutes before transferring them to a wire rack to cool completely.\"\r\n        ],\r\n        \"notes\": [\r\n            \"These cookies are even better if you let the dough rest in the fridge for 24 hours before baking.\",\r\n            \"After flash freezing, dough balls can be frozen for 2-3 months, then baked straight from frozen. Add 2-3 minutes to the bake time.\",\r\n            \"Store the cookies in an airtight container at room temperature for up to a week, or freeze for up to 3 months.\",\r\n            \"For an extra touch, sprinkle a pinch of flaky sea salt on top of the cookies before baking.\",\r\n            \"For a more uniform cookie, use a food scale to portion the dough. a 35-gram cookie is a good size for fitting more than a couple of cookies on one baking sheet.\"\r\n        ]\r\n    },\r\n    {\r\n        \"title\": \"Fresh Flour Pie Crust\",\r\n        \"description\": \"A basic pie crust for sweet or savory pies.\",\r\n        \"permalink\": \"perfect-pie-crust-fresh-milled-flour\",\r\n        \"defaultServings\": 2,\r\n        \"servingUnits\": \"pie crusts\",\r\n        \"scalable\": true,\r\n        \"ingredients\": [\r\n            {\r\n                \"name\": \"flour\",\r\n                \"quantity\": 360,\r\n                \"unit\": \"g\"\r\n            },\r\n            {\r\n                \"name\": \"sugar\",\r\n                \"quantity\": 2,\r\n                \"unit\": \"tsp\"\r\n            },\r\n            {\r\n                \"name\": \"salt\",\r\n                \"quantity\": 1,\r\n                \"unit\": \"tsp\"\r\n            },\r\n            {\r\n                \"name\": \"very cold unsalted butter\",\r\n                \"quantity\": 2,\r\n                \"unit\": \"sticks\"\r\n            },\r\n            {\r\n                \"name\": \"ice water\",\r\n                \"quantity\": 120,\r\n                \"unit\": \"g\"\r\n            }\r\n        ],\r\n        \"steps\": [\r\n            \"Firstly, mill the flour. Mill more flour than called for, so you have extra to dust your work surface with. Place the flour in the fridge to cool for at least 30 minutes.\",\r\n            \"Cut the butter into small cubes, and place in the fridge to cool while the flour is cooling.\",\r\n            \"After all ingredients are chilled, add the sugar and salt to the flour, and stir to combine.\",\r\n            \"Then, add the cubed butter into the dry mix. Cut the butter in using a pastry cutter or two forks, or a food processor.\",\r\n            \"Once the butter & flour resemble pebble or pea size pieces, slowly drizzle in the ice cold water, 1 Tablespoon at a time.\",\r\n            \"Mix the water in each time before adding more water. You just want the dough to form large clumps. So, when you squeeze the dough with your hand it will stay together, but not be wet.\",\r\n            \"Divide the dough into required portions. Wrap each portion with plastic and place in the refrigerator to let the dough hydrate and the bran soften. Rest for at least an hour, up to 3 days, or freeze for 2-3 months.\",\r\n            \"Preheat the oven to 350 degrees F.\",\r\n            \"Dust the work surface and place cold dough on the counter for about 5 minutes to soften.\",\r\n            \"Roll out each portion about 1/8 inch thick.\",\r\n            \"Carefully place one rolled out pie crust into a pie pan. Gently lift each edge and allow the dough to fall into place. Do not stretch the dough.\",\r\n            \"Cut off excess pie dough around the edge. Line the crust with parchment and fill with beans or pie weights. Bake for 20 minutes.\",\r\n            \"Remove the parchment and beans, add an egg wash, and bake for another 10 minutes, or until the crust is golden brown.\",\r\n            \"Let the crust cool before Freezing and storing, or fill it right away and cover with a top crust.\",\r\n            \"Brush an egg wash on the top crust, and sprinkle with sugar for sweet pies. Cut slits in the top crust for steam to escape.\",\r\n            \"Bake according to the pie recipe instructions.\"\r\n        ],\r\n        \"notes\": [\r\n            \"Most wheat varieties will work for this recipe, but I prefer a soft white wheat for a tender crust. Ancient grains are a decent alternative.\",\r\n        ]\r\n    },\r\n    {\r\n        \"title\": \"Swiss Macaron Shells\",\r\n        \"description\": \"Delicate and crisp macaron shells made using the Swiss meringue method\",\r\n        \"permalink\": \"swiss-macaron-shells\",\r\n        \"defaultServings\": 24,\r\n        \"servingUnits\": \"cookies\",\r\n        \"scalable\": true,\r\n        \"ingredients\": [\r\n            {\r\n                'name': 'Almond Flour',\r\n                'quantity': 105,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Powdered Sugar',\r\n                'quantity': 105,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Egg Whites',\r\n                'quantity': 100,\r\n                'unit': 'g'\r\n            },\r\n            {\r\n                'name': 'Granulated Sugar',\r\n                'quantity': 100,\r\n                'unit': 'g'\r\n            }\r\n        ],\r\n        \"steps\": [\r\n            \"'Mise en place': Boil a pot of water. Prepare your baking sheets upside-down with parchment. Preheat the oven to 300°F. Sift the almond flour and powdered sugar together into a large bowl to create your \\\"tant pour tant\\\".\",\r\n            \"In a heatproof bowl, combine the egg whites and granulated sugar. Place the bowl over a pot of simmering water, making sure the bottom of the bowl does not touch the water.\",\r\n            \"Whisk the egg whites and sugar constantly until the mixture reaches 160°F and the sugar is completely dissolved.\",\r\n            \"Remove the bowl from the heat and transfer the mixture to a stand mixer fitted with the whisk attachment. Whisk on medium-high speed until stiff peaks form and the meringue has cooled to room temperature.\",\r\n            \"Add dyes now if coloring shells. Gently fold the almond flour and powdered sugar mixture into the meringue in three additions, being careful not to deflate the meringue.\",\r\n            \"Continue folding the batter until it flows continuously off the spatula for a few seconds without breaking.\",\r\n            \"Transfer the batter to a piping bag fitted with a round tip. Pipe small circles onto the baking sheets.\",\r\n            \"Tap under the baking sheet firmly to release any air bubbles. Let the macarons sit at room temperature for 30-60 minutes, or until a skin forms on the surface and they are no longer sticky to the touch.\",\r\n            \"Bake the macarons for 15-18 minutes, or until they have risen and developed feet. Rotate the baking sheet halfway through baking to ensure even baking.\",\r\n            \"Remove the macarons from the oven and let them cool completely on the parchment before moving them, or the shells may stick.\",\r\n        ],\r\n        \"notes\": [\r\n            \"Store the macaron shells in an airtight container at room temperature for up to a week, or freeze for up to 3 months.\",\r\n            \"Optionally, add a sprinkle of cream of tartar to your egg whites before or dissolving the sugar to help stabilize the meringue.\",\r\n            \"Most grocery store food dyes are not concentrated enough to get a vibrant color. Use Wilton or Americolor gel or powdered food colorings for best results.\",\r\n            \"Pair shells by size and fill the macarons with your favorite filling, such as buttercream, ganache, or jam. I like to pipe a ring of buttercream and fill it with a fresh jam for a 'filled' effect.\"\r\n        ]\r\n    }\r\n];","export default [\n    {\n        \"title\": \"Old Bay Popcorn\",\n        \"description\": \"Bacon fat, butter, and Old Bay seasoning makes this my favorite popcorn\",\n        \"permalink\": \"old-bay-pop\",\n        \"defaultServings\": 2,\n        \"servingUnits\": \"servings\",\n        \"scalable\": true,\n        \"ingredients\": [\n            {\n                \"name\": \"Baby White Popcorn\",\n                \"quantity\": 130,\n                \"unit\": \"g\"\n            },\n            {\n                \"name\": \"Rendered Bacon Fat\",\n                \"quantity\": 1,\n                \"unit\": \"Tbsp\"\n            },\n            {\n                \"name\": \"Butter\",\n                \"quantity\": 1,\n                \"unit\": \"Tbsp\"\n            },\n            {\n                \"name\": \"Flake salt\",\n                \"quantity\": 2,\n                \"unit\": \"tsp\"\n            },\n            {\n                \"name\": \"Old Bay\",\n                \"quantity\": 2,\n                \"unit\": \"tbsp\"\n            }\n        ],\n        \"steps\": [\n            \"Place a deep pan on the stove with a lid. Put 2 popcorn kernels in the pan with the bacon fat over medium high heat. Cover and let the kernels pop undisturbed.\",\n            \"Once the two 'canary kernels' have popped, remove the pan from heat and add the remaining kernels. Cover. Coat all kernels in oil and place back on heat, this time just medium.\",\n            \"When the kernels start popping again, shake the pan gently. Once popping slows, remove from heat and continue shaking until kernels stop popping\",\n            \"Drizzle with melted butter and toss with flake salt and Old Bay seasoning to taste.\"\n        ],\n        \"notes\": []\n    },\n    {\n        \"title\": \"Red Beet Pickled Eggs\",\n        \"description\": \"A tangy and earthy breakfast, side or snack\",\n        \"permalink\": \"red-beet-pickled-eggs\",\n        \"defaultServings\": 18,\n        \"servingUnits\": \"eggs\",\n        \"scalable\": true, \n        \"ingredients\": [\n            {\n                'name': 'beets',\n                'quantity': 2,\n                'unit': 'whole beets'\n            },\n            {\n                'name': 'eggs',\n                'quantity': 18,\n                'unit': 'whole eggs'\n            },\n            {\n                'name': 'white vinegar',\n                'quantity': 1000,\n                'unit': 'g'\n            },\n            {\n                'name': 'sugar',\n                'quantity': 500,\n                'unit': 'g'\n            },\n            {\n                'name': 'salt',\n                'quantity': 2,\n                'unit': 'tbsp'\n            }\n        ],\n        \"steps\": [\n            \"Place eggs in a pot of cold water, and bring it to a boil on the stove, stirring frequently to keep the yolks centered. Once boiling, set a timer for 10 minutes.\",\n            \"While the eggs are boiling, prepare an ice bath in a large bowl.\",\n            \"Wash and slice the beets. Place them in a pot with the vinegar, sugar, and salt. Bring to a boil, then simmer for 10 minutes.\",\n            \"Once the eggs are done, remove them from the pot and place them in the ice bath to cool.\",\n            \"Peel the eggs and place them in a large jar or container, layered with the sliced beets.\",\n            \"cover the eggs with the pickling liquid, and let them sit in the fridge for at least 24 hours before eating.\"\n        ],\n        \"notes\": [\n            \"For best results, let the eggs sit in the pickling liquid for at least 3 days before eating.\",\n            \"Serve with a hefty sprinkle of salt, or slice and serve on a salad or sandwich.\"\n        ],\n    },\n]","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport RecipeList from './components/RecipeList';\nimport RecipeDetail from './components/RecipeDetail';\nimport ReaderView from './components/ReaderView';\nimport recipeLibrary from '../../data/recipes';\nimport './styles/RecipesApp.css';\n\nconst RecipesApp = ({ view = 'standard' }) => {\n  const [recipes, setRecipes] = useState([]);\n  const [activeRecipe, setActiveRecipe] = useState(null);\n  const [fontSize, setFontSize] = useState(100); // Font size in percentage\n  const urlPermalink = useParams().recipeId;\n  const navigate = useNavigate();\n  \n  useEffect(() => {\n    console.log('useEffect triggered with urlPermalink:', urlPermalink);\n    setRecipes(recipeLibrary);\n    \n    // Find recipe across all sections when URL permalink changes\n    if (urlPermalink && Object.keys(recipeLibrary).length > 0) {\n      // Helper function to find a recipe by permalink across all sections\n      const findRecipeByPermalink = (permalink) => {\n        for (const section in recipeLibrary) {\n          const foundRecipe = recipeLibrary[section].find(r => r.permalink === permalink);\n          if (foundRecipe) {\n            return foundRecipe;\n          }\n        }\n        return null;\n      };\n      \n      const recipe = findRecipeByPermalink(urlPermalink);\n      console.log('Found recipe:', recipe?.title || 'null');\n      if (recipe) {\n        setActiveRecipe(recipe);\n      } else {\n        // Recipe not found, clear active recipe\n        setActiveRecipe(null);\n      }\n    } else if (!urlPermalink) {\n      // No recipe in URL, clear active recipe\n      console.log('No urlPermalink, clearing active recipe');\n      setActiveRecipe(null);\n    }\n  }, [urlPermalink]);\n\n  const handleFontSizeChange = (newSize) => {\n    setFontSize(newSize);\n  };\n\n  const handleRecipeSelect = (recipe) => {\n    console.log('Recipe selected:', recipe.title, recipe.permalink);\n    navigate(`/crafts/recipes/${recipe.permalink}`);\n  };\n\n  const toggleReaderView = () => {\n    if (activeRecipe) {\n      if (view === 'reader') {\n        navigate(`/crafts/recipes/${activeRecipe.permalink}`);\n      } else {\n        navigate(`/crafts/recipes/reader-view/${activeRecipe.permalink}`);\n      }\n    }\n  };\n\n  // Render Reader view if specified\n  if (view === 'reader' && activeRecipe) {\n    return (\n      <ReaderView \n        recipe={activeRecipe} \n        fontSize={fontSize} \n        onFontSizeChange={handleFontSizeChange}\n        onToggleView={toggleReaderView}\n      />\n    );\n  }\n\n  return (\n    <div className=\"recipes-app\">\n      <div className=\"app-header\">\n        {/* View controls moved to RecipeDetail */}\n      </div>\n\n      <div className=\"recipes-content\">\n        <RecipeList \n          recipes={recipes} \n          onSelectRecipe={handleRecipeSelect}\n          activeurlPermalink={activeRecipe?.permalink}\n        />\n\n        {activeRecipe ? (\n          <RecipeDetail \n            recipe={activeRecipe} \n            fontSize={fontSize}\n            onFontSizeChange={handleFontSizeChange}\n            currentView={view}\n            onToggleView={toggleReaderView}\n          />\n        ) : (\n          <div className=\"empty-state\">\n            <p>Select a recipe to view details</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RecipesApp;\n"],"names":["_ref","recipes","onSelectRecipe","fontSize","searchTerm","setSearchTerm","useState","expandedItems","setExpandedItems","recipeMatchesSearch","useMemo","recipe","trim","term","toLowerCase","Object","values","some","value","includes","Array","isArray","item","filteredRecipes","entries","reduce","acc","_ref2","sectionKey","sectionRecipes","filtered","filter","length","React","sectionsWithResults","keys","_jsxs","className","style","concat","children","_jsx","TextField","fullWidth","variant","size","placeholder","onChange","e","target","sx","mb","Box","minHeight","minWidth","SimpleTreeView","onExpandedItemsChange","handleExpandedItemsChange","event","itemIds","onItemSelectionToggle","handleItemSelectionToggle","itemId","isSelected","find","permalink","padding","backgroundColor","map","_ref3","TreeItem","label","charAt","toUpperCase","slice","title","fixedFontStyle","currentView","onToggleView","onFontSizeChange","scale","onScaleChange","showScaleControl","onClick","Math","max","FontAwesomeIcon","icon","faSearchMinus","min","faSearchPlus","htmlFor","id","parseFloat","setScale","scaleIngredient","ingredient","undefined","quantity","name","unit","scaledQuantity","toFixed","replace","String","match","amount","rest","formattedAmount","RecipeControls","ingredients","i","formattedIngredient","steps","step","notes","note","formattedQuantity","_objectSpread","renderIngredient","scaledIngredient","_Fragment","Dinners","Desserts","view","setRecipes","activeRecipe","setActiveRecipe","setFontSize","urlPermalink","useParams","recipeId","navigate","useNavigate","useEffect","console","log","recipeLibrary","section","foundRecipe","r","findRecipeByPermalink","handleFontSizeChange","newSize","toggleReaderView","ReaderView","RecipeList","activeurlPermalink","RecipeDetail"],"sourceRoot":""}