{"version":3,"file":"static/js/251.fa1d49a1.chunk.js","mappings":"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","sources":["components/Layout.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { unpinChord } from '../store/chordsSlice';\nimport ChordChart from '../apps/songs/components/ChordChart';\nimport '../styles/Layout.css';\n\nconst Layout = ({ children, footer }) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  \n  // Get pinned chords from Redux store\n  const pinnedChords = useSelector((state) => state.chords?.pinnedChords || []);\n  const currentInstrument = useSelector((state) => state.chords?.currentInstrument || 'ukulele');\n  \n  // Check if we're on a crafts page\n  const isCraftsPage = location.pathname.startsWith('/crafts');\n  \n  const isActive = (path) => {\n    // For root path, check exact match to avoid highlighting on all pages\n    if (path === '/') {\n      return location.pathname === '/' ? 'active' : '';\n    }\n    return location.pathname.startsWith(path) ? 'active' : '';\n  };\n\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n  const handleUnpinChord = (chord) => {\n    dispatch(unpinChord(chord));\n  };\n\n  // Create pinned chords footer content\n  const pinnedChordsFooter = pinnedChords.length > 0 ? (\n    <div style={{\n      position: 'fixed',\n      bottom: '45px',\n      left: '0px',\n      width: '100%',\n      backgroundColor: 'rgba(240, 240, 240, 0.7)',\n      textAlign: 'center',\n      height: '150px',\n    }}>\n      <div className=\"ant-flex css-ra95ns ant-flex-wrap-wrap ant-flex-justify-center ant-flex-gap-small\">\n        {pinnedChords.map(chord => (\n          <div key={chord} style={{ cursor: 'pointer', display: 'inline-block', transform: 'scale(0.75)', transformOrigin: 'top left', position: 'relative' }} onClick={() => handleUnpinChord(chord)}>\n            <div className=\"chord-chart\">\n              <ChordChart\n                chord={chord}\n                instrument={currentInstrument}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  ) : null;\n\n  return (\n    <div className={`app-container ${isCraftsPage ? 'crafts-layout' : 'professional-layout'}`}>\n      {/* Only show header for crafts pages */}\n      {isCraftsPage && (\n        <header className=\"main-header\">\n          <div className=\"header-content\">\n                <span className={isActive('/crafts')}>\n                  <Link to=\"/crafts\">\n                      <span className=\"site-title\">\n                        <span className=\"home-icon\">üè†</span>\n                      </span>\n                  </Link>\n                </span>\n            \n            {/* Desktop navigation - will be visible only on desktop */}\n            <nav className=\"desktop-navigation\">\n              <ul className=\"nav-list\">\n                <li className={isActive('/')}>\n                  <Link to=\"/\">Professional</Link>\n                </li>\n                <li className={isActive('/crafts/recipes')}>\n                  <Link to=\"/crafts/recipes\">Recipes</Link>\n                </li>\n                <li className={isActive('/crafts/tabs')}>\n                  <Link to=\"/crafts/tabs\">Music Tabs</Link>\n                </li>\n\n              </ul>\n            </nav>\n            \n            {/* Mobile menu toggle - will be visible only on mobile */}\n            <button \n              className=\"menu-toggle\" \n              onClick={toggleMenu}\n              aria-label=\"Toggle navigation menu\"\n            >\n              <span className=\"hamburger\"></span>\n            </button>\n          </div>\n        </header>\n      )}\n\n      {/* Mobile navigation - will be visible only when toggled on mobile and on crafts pages */}\n      {isCraftsPage && (\n        <div className={`mobile-navigation-container ${menuOpen ? 'open' : ''}`}>\n          <nav className=\"main-navigation\">\n            <ul className=\"nav-list\">\n              <li className={isActive('/')}>\n                <Link to=\"/\" onClick={() => setMenuOpen(false)}>Professional</Link>\n              </li>\n              <li className={isActive('/crafts/recipes')}>\n                <Link to=\"/crafts/recipes\" onClick={() => setMenuOpen(false)}>Recipes</Link>\n              </li>\n              <li className={isActive('/crafts/tabs')}>\n                <Link to=\"/crafts/tabs\" onClick={() => setMenuOpen(false)}>Music Tabs</Link>\n              </li>\n              \n            </ul>\n          </nav>\n        </div>\n      )}\n\n      <main className={`content-container ${isCraftsPage ? 'crafts-content' : 'professional-content'}`}>\n        {children}\n      </main>\n\n      {/* Always show the pinned chords footer if chords are selected */}\n      {pinnedChordsFooter}\n\n      {/* Only show the main footer for crafts pages */}\n      {isCraftsPage && (footer || (\n        <footer className=\"ant-layout-footer app-footer dark-footer css-ra95ns\">\n          Wade Ahlstrom ¬© {new Date().getFullYear()}\n        </footer>\n      ))}\n    </div>\n  );\n};\n\nexport default Layout;\n"],"names":["_ref","children","footer","menuOpen","setMenuOpen","useState","location","useLocation","dispatch","useDispatch","pinnedChords","useSelector","state","_state$chords","chords","currentInstrument","_state$chords2","isCraftsPage","pathname","startsWith","isActive","path","pinnedChordsFooter","length","_jsx","style","position","bottom","left","width","backgroundColor","textAlign","height","className","map","chord","cursor","display","transform","transformOrigin","onClick","unpinChord","handleUnpinChord","ChordChart","instrument","_jsxs","concat","Link","to","toggleMenu","Date","getFullYear"],"sourceRoot":""}